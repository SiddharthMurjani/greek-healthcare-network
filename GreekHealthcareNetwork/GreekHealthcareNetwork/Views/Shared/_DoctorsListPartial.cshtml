@model GreekHealthcareNetwork.Models.SearchLoginViewModel
@using Microsoft.AspNet.Identity;
@{
    Layout = "~/Views/Shared/_CustomScriptsLayout.cshtml";
    var CurrentUserId = User.Identity.GetUserId();
}

<div class="col-12">
    @Html.Partial("_SearchPartial")
</div>
<div id="doctorsList" class="row col-md-12">

</div>

<div class="modal fade" id="doctorDetails" tabindex="-1" role="dialog" aria-labelledby="doctorDetailsLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="doctorDetailsLabel">Doctor Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="errorContainer" class="container">
                    <div class="row">
                        <p> Something went wrong. Please try again later. </p>
                    </div>
                </div>
                <div id="normalContainer" class="container">
                    <div class="row" id="profileSection">
                        <div class="col-md-4">
                            <img src="" class="rounded-circle w-100 h-100" alt="">
                        </div>
                    </div>
                    <div>
                        <table class="table table-borderless mt-5">
                            <tbody>
                                <tr>
                                    <th>First Name:</th>
                                    <td id="firstName"> </td>
                                </tr>
                                <tr>
                                    <th>Last Name:</th>
                                    <td id="lastName"> </td>
                                </tr>
                                <tr>
                                    <th>Medical Specialty:</th>
                                    <td id="medicalSpecialty"> </td>
                                </tr>
                                <tr id="officeAddressTR">
                                    <th>Office Address:</th>
                                    <td id="officeAddress"> </td>
                                </tr>
                                <tr id="doctorEmailTR">
                                    <th>Email:</th>
                                    <td id="doctorEmail"> </td>
                                </tr>
                                <tr>
                                    <th>Telephone:</th>
                                    <td id="doctorTelephone"> </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@if (User.IsInRole("Insured"))
{
    @Html.Partial("_NewMessage")
}

<div class="modal fade" id="bookAppointments" tabindex="-1" role="dialog" aria-labelledby="bookAppointmentsLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookAppointmentLabel">Book Appointment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="errorContainerBook" class="container">
                    <div class="row">
                        <p> Something went wrong. Please try again later. </p>
                    </div>
                </div>
                <div id="normalContainerBook" class="container">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="row" id="profilepictureBook">
                                <div class="col-md-12">
                                    <img src="" class="rounded-circle w-100 h-100" alt="">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="row" id="bookapointmentsection">
                                <div class="col-md-12">
                                    <form method="post" action="/Insureds/BookAppointment">
                                        <div class="form-group">
                                            @Html.HiddenFor(m => m.Appointment.DoctorId)
                                        </div>
                                        <div class="form-group">
                                            @Html.HiddenFor(m => m.Appointment.InsuredId)
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Appointment.AppointmentDate, new { @class = "col-md-12 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.Appointment.AppointmentDate, new { @class = "form-control", type = "date" })
                                                @Html.ValidationMessageFor(m => m.Appointment.AppointmentDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div id="NoAvailableAppointments" class="form-group">
                                            <div class="row">
                                                <p> We are sorry but all the doctor's appointments are booked on this day. Please try choose another day. </p>
                                            </div>
                                        </div>
                                        <div id="NoWorkingDay" class="form-group">
                                            <div class="row">
                                                <p> We are sorry but the doctor does not work on this day. Please try choose another day. </p>
                                            </div>
                                        </div>
                                        <div id="appointmentTime" class="form-group">
                                            @Html.LabelFor(m => m.Appointment.AppointmentStartTime, new { @class = "col-md-12 control-label" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.Appointment.AppointmentStartTime, new SelectList(new List<Object>()), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Appointment.AppointmentStartTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div id="insuredComments" class="form-group">
                                            @Html.LabelFor(m => m.Appointment.InsuredComments, new { @class = "col-md-12 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(m => m.Appointment.InsuredComments, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Appointment.InsuredComments, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div id="bookAppointmentButton" class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" class="btn btn-outline-dark" value="Book Appointment" />
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div id="profilesectionBook" class="col-md-12">
                            <table class="table table-borderless mt-2">
                                <tbody>
                                    <tr>
                                        <th>First Name:</th>
                                        <td id="firstNameBook"> </td>
                                    </tr>
                                    <tr>
                                        <th>Last Name:</th>
                                        <td id="lastNameBook"> </td>
                                    </tr>
                                    <tr>
                                        <th>Medical Specialty:</th>
                                        <td id="medicalSpecialtyBook"> </td>
                                    </tr>
                                    <tr id="officeAddressBookTR">
                                        <th>Office Address:</th>
                                        <td id="officeAddressBook"> </td>
                                    </tr>
                                    <tr id="doctorEmailBookTR">
                                        <th>Email:</th>
                                        <td id="doctorEmailBook"> </td>
                                    </tr>
                                    <tr>
                                        <th>Telephone:</th>
                                        <td id="doctorTelephoneBook"> </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section customScripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
        function listAvailableAppointments(date, doctorId) {
            $.ajax({
                dataType: 'json',
                type: 'get',
                url: '/api/Search/GetAvailableAppointmentSlots?appointmentDay=' + date + '&doctorId=' + doctorId,
                success: function (data) {
                    $('#NoWorkingDay').hide();
                    if (data.length == 0) {
                        $('#appointmentTime').hide();
                        $('#insuredComments').hide();
                        $('#bookAppointmentButton').hide();
                        $('#NoAvailableAppointments').show();
                    }
                    else {
                        $('#NoAvailableAppointments').hide();
                        $('#appointmentTime').show();
                        $('#insuredComments').show();
                        $('#bookAppointmentButton').show();
                    }
                    $('#normalContainerBook').show();
                    $('#bookAppointments').modal('show');
                },
                error: function () {
                    $('#appointmentTime').hide();
                    $('#insuredComments').hide();
                    $('#bookAppointmentButton').hide();
                    $('#NoAvailableAppointments').hide();
                    $('#NoWorkingDay').show();
                    $('#normalContainerBook').show();
                    $('#bookAppointments').modal('show');
                }
            })
        }
        function ListDoctors(firstName, lastName, specialty) {
            $.ajax({
                dataType: 'json',
                type: 'get',
                url: '/api/Search/SearchDoctorResults?doctorsFirstName=' + firstName + '&doctorsLastName=' + lastName + '&doctorsSpecialty=' + specialty,
                success: function (data) {
                    $('#doctorsList').empty();
                    if (data.length == 0) {
                        $("#doctorsList").append('<p> There are no doctors matching these criteria. </p>')
                    }
                    else {
                        data.forEach(function (doctor) {
                            $('#doctorsList').append('<div class="col-md-3 col-sm-6 col-xs-12"><div class="img-thumbnail">' +
                                '<img src="@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture + '" alt="' + doctor.User.ProfilePicture + '">' +
                                '<div><h5>' + doctor.User.FirstName +  '</h5><h5>' + doctor.User.LastName + '</h5>' +
                                '<p>' + doctor.MedicalSpecialty + '</p> <button class="btn btn-outline-dark btn-sm showDoctorDetails" data-id="' + doctor.UserId + '">View Details</button>' +
                                @if (User.IsInRole("Insured")) {
                                    @(new HtmlString("'<button class=\"btn btn-outline-dark btn-sm showDoctorMessage\" data-id=\"' + doctor.UserId + '\">Message</button><button class=\"btn btn-outline-dark btn-sm bookAppointments\" data-id=\"' + doctor.UserId + '\">Book Appointment</button></div></div></div>'"));
                                }else {
                                    @(new HtmlString("'</div></div></div>'"));
                                });
                        });
                    }
                    $('#send').click(function (e) {
                        const $form = $('#messagearea');
                        $.validator.unobtrusive.parse($form);
                        $form.validate();
                        if ($form.valid()) {
                            let model = new Object();
                            model.Message = new Object();
                            model.Message.ConversationId = 0;
                            model.Message.SenderId = $('#Message_SenderId').val();
                            model.Message.RecipientId = $('#Message_RecipientId').val();
                            model.Message.Subject = $('#Message_Subject').val();
                            model.Message.MessageText = $('#Message_MessageText').val();
                            model.FirstName = "";
                            model.LastName = "";
                            model.InsuredPlans = [];
                            model.DoctorSpecialty = -1;
                            model.MedicalSpecialties = [];
                            model.AppointmentDate = null;
                            model.UserName = $('#UserName1').val();
                            model.Password = $('#Password1').val();
                            model.RememberMe = false;
                            model.VisitorMessage = null;
                            model = JSON.stringify(model)
                            $.ajax({
                                contentType: 'application/json',
                                type: 'post',
                                url: '/api/Messages',
                                data: model,
                                cache: false,
                                processData: false,
                                success: function () {
                                    $('#Message_Subject').val("");
                                    $('#Message_MessageText').val("");
                                    $('#normalContainerMessage').hide();
                                    $('#errorContainerMessage').hide();
                                    $('#successContainerMessage').show();
                                    setTimeout(function () {
                                        $('#newMessage').modal("hide");
                                    }, 3000)
                                },
                                error: function (error) {
                                    $('#errorContainerMessage').show();
                                    const errorObject = error.responseJSON.ModelState;
                                    $('#messagearea div.validation-summary-errors > ul').children().remove();
                                    for (var property in errorObject) {
                                        if (errorObject.hasOwnProperty(property)) {
                                            if (property == '') {
                                                $('#messagearea div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                            }
                                        }
                                    }
                                    const $form = $('#messagearea');
                                    $.validator.unobtrusive.parse($form);
                                    $form.validate();
                                    if (!$form.valid()) {
                                        $.each($form.validate().errorList, function (key, value) {
                                            const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                            $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                            $errorSpan.show();
                                        });
                                    }
                                }
                            });
                        }
                        else {
                            $('#errorContainerMessage').show();
                            console.log($form.validate().errorList);
                            $.each($form.validate().errorList, function (key, value) {
                                console.log(value);
                                const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                $errorSpan.show();
                            });
                        }
                    })
                    $('.showDoctorDetails').click(function (e) {
                        let id = $(e.target).data('id');
                        $.ajax({
                            url: '/api/Search/SearchDoctorById/' + id,
                            type: 'get',
                            dataType: 'json',
                            success: function (doctor) {
                                $('#errorContainer').hide();
                                $('#profileSection img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture);
                                $('#firstName').text(doctor.User.FirstName);
                                $('#lastName').text(doctor.User.LastName);
                                $('#medicalSpecialty').text(doctor.MedicalSpecialty);
                                $('#officeAddress').text(doctor.OfficeAddress);
                                let elem = $('#officeAddressTR');
                                while ($(elem).next()[0].id != 'doctorEmailTR') {
                                    const next = $(elem).next();
                                    $(next).remove();
                                }
                                if (doctor.WorkingHours.length == 0) {
                                    $(elem).after('<tr><th>Working hours:</th><td> Doctor has not declared any working hours yet. </td></tr>');
                                }
                                else {
                                    for (let i = 0; i < doctor.WorkingHours.length; i++) {
                                        if (i == 0) {
                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                            $(elem).after('<tr><th>Working hours:</th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                        }
                                        else {
                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                            $(elem).after('<tr><th></th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                        }
                                        elem = $(elem).next();
                                    }
                                }
                                $('#doctorEmail').text(doctor.User.Email);
                                $('#doctorTelephone').text(doctor.User.PhoneNumber);
                                $('#normalContainer').show();
                                $('#doctorDetails').modal('show');
                            },
                            error: function () {
                                $('#normalContainer').hide();
                                $('#errorContainer').show();
                            }
                        })
                    });
                    $('.showDoctorMessage').click(function (e) {
                        let id = $(e.target).data('id');
                        $('#errorContainerMessage').hide();
                        $('#successContainerMessage').hide();
                        $('#Message_RecipientId').val(id);//auto xrhsimopoieis-allazeis to id.
                        $('#normalContainerMessage').show();
                        $('#newMessage').modal('show');
                    })
                    $("#newMessage").on("hidden.bs.modal", function () {
                        $('#Message_Subject').val("");
                        $('#Message_MessageText').val("");
                    });
                    $('.bookAppointments').click(function (e) {
                        let id = $(e.target).data('id');
                        
                        $.ajax({
                            url: '/api/Search/SearchDoctorById/' + id,
                            type: 'get',
                            dataType: 'json',
                            success: function (doctor) {
                                $('#errorContainerBook').hide();
                                $('#profilepictureBook img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture);
                                $('#firstNameBook').text(doctor.User.FirstName);
                                $('#lastNameBook').text(doctor.User.LastName);
                                $('#medicalSpecialtyBook').text(doctor.MedicalSpecialty);
                                $('#officeAddressBook').text(doctor.OfficeAddress);
                                let elem = $('#officeAddressBookTR');
                                while ($(elem).next()[0].id != 'doctorEmailBookTR') {
                                    const next = $(elem).next();
                                    $(next).remove();
                                }
                                if (doctor.WorkingHours.length == 0) {
                                    $(elem).after('<tr><th>Working hours:</th><td> Doctor has not declared any working hours yet. </td></tr>');
                                }
                                else {
                                    for (let i = 0; i < doctor.WorkingHours.length; i++) {
                                        if (i == 0) {
                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                            $(elem).after('<tr><th>Working hours:</th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                        }
                                        else {
                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                            $(elem).after('<tr><th></th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                        }
                                        elem = $(elem).next();
                                    }
                                }
                                const appointmentDate = $('#AppointmentDate').val();  
                                $('#doctorEmailBook').text(doctor.User.Email);
                                $('#doctorTelephoneBook').text(doctor.User.PhoneNumber);
                                $('#Appointment_DoctorId').val(doctor.UserId);
                                $('#Appointment_InsuredId').val('@CurrentUserId');
                                $('#Appointment_AppointmentDate').val(appointmentDate);
                                if (appointmentDate == "" || appointmentDate == undefined) {
                                    $('#appointmentTime').hide();
                                    $('#insuredComments').hide();
                                    $('#bookAppointmentButton').hide();
                                    $('#NoAvailableAppointments').hide();
                                    $('#NoWorkingDay').hide();
                                    $('#normalContainerBook').show();
                                    $('#bookAppointments').modal('show');
                                }
                                else {
                                    listAvailableAppointments(appointmentDate, doctor.UserId);                                    
                                }                                
                            },
                            error: function () {
                                $('#normalContainerBook').hide();
                                $('#errorContainerBook').show();
                            }
                        })
                    });


                },
                error: function () {
                    $('#doctorsList').empty();
                    $('#doctorsList').append('<p>There are no doctors matching these criteria.</p>');
                }
            })
        }
        ListDoctors('', '', -1);
        $('#search').on('submit', function (e) {
            e.preventDefault();
            ListDoctors(e.target[0].value, e.target[1].value, e.target[2].value);
        })
        $('#bookAppointments').on('hidden.bs.modal', function () {
            $('#NoAvailableAppointments').hide();
            $('#NoWorkingDay').hide();
            $('#Appointment_InsuredComments').val('');
        })
        $('#Appointment_AppointmentDate').on('change', function () {
            const appointmentDate = $('#Appointment_AppointmentDate').val();
            if (appointmentDate == "") {
                $('#appointmentTime').hide();
                $('#insuredComments').hide();
                $('#bookAppointmentButton').hide();
                $('#NoAvailableAppointments').hide();
                $('#NoWorkingDay').hide();
            }
            else {
                listAvailableAppointments(appointmentDate, $('#Appointment_DoctorId').val());                                    
            } 
        })
    })
    </script>
}

