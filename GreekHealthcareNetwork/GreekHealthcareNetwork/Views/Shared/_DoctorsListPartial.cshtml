@model GreekHealthcareNetwork.Models.SearchLoginViewModel
@using Microsoft.AspNet.Identity;
@using GreekHealthcareNetwork.Models;
@{
    Layout = "~/Views/Shared/_CustomScriptsLayout.cshtml";
    string CurrentUserId = "";
    bool insuredIsActive = true;
    if (Request.IsAuthenticated)
    {
        CurrentUserId = User.Identity.GetUserId();
        using (var db = new ApplicationDbContext())
        {
            insuredIsActive = db.Users.SingleOrDefault(u => u.Id.Equals(CurrentUserId)).IsActive;
        }
    }
}

@section cssScripts {
    <style>
        @@media (min-width: 1200px){
            .modal-xl {
                max-width: 1011px;
            }
        }
        
        @@media (min-width: 992px) {
            .modal-xl {
                max-width: 1000px;
            }
        }

    </style>    
}

<div class="col-12">
    @Html.Partial("_SearchPartial")
</div>
<div id="doctorsList" class="row col-md-12">

</div>

<div class="modal fade" id="doctorDetails" tabindex="-1" role="dialog" aria-labelledby="doctorDetailsLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="doctorDetailsLabel">Doctor Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="errorContainer" class="container">
                    <div class="row">
                        <p> Something went wrong. Please try again later. </p>
                    </div>
                </div>
                <div id="normalContainer" class="container">
                    <div class="row" id="profileSection">
                        <div class="col-4 offset-4">
                            <img src="" class="rounded-circle w-100 h-100" alt="">
                        </div>
                    </div>
                    <div>
                        <table class="table table-borderless mt-5">
                            <tbody>
                                <tr>
                                    <th>First Name:</th>
                                    <td id="firstName"> </td>
                                </tr>
                                <tr>
                                    <th>Last Name:</th>
                                    <td id="lastName"> </td>
                                </tr>
                                <tr>
                                    <th>Medical Specialty:</th>
                                    <td id="medicalSpecialty"> </td>
                                </tr>
                                <tr id="officeAddressTR">
                                    <th>Office Address:</th>
                                    <td id="officeAddress"> </td>
                                </tr>
                                <tr id="doctorEmailTR">
                                    <th>Email:</th>
                                    <td id="doctorEmail"> </td>
                                </tr>
                                <tr>
                                    <th>Telephone:</th>
                                    <td id="doctorTelephone"> </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@if (User.IsInRole("Insured"))
{
    @Html.Partial("_NewMessage")
}

<div class="modal fade" id="bookAppointments" tabindex="-1" role="dialog" aria-labelledby="bookAppointmentsLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookAppointmentLabel">Book Appointment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="errorContainerBook" class="container" style="display: none;">
                    <div class="row">
                        <p> Something went wrong. Please try again later. </p>
                    </div>
                </div>
                <div id="normalContainerBook" class="container">
                    <div class="row">
                        <div class="col-lg-2">
                            <div class="row" id="profilepictureBook">
                                <div class="col-6 col-lg-12 offset-3 offset-lg-0">
                                    <img src="/Content/img/Doctors/08e6d3e4-9526-4e40-97fb-52ca512a26ef/08e6d3e4-9526-4e40-97fb-52ca512a26ef.jpg" class="rounded-circle w-100 h-100" alt="">
                                </div>
                            </div>
                        </div>
                        <div id="profilesectionBook" class="col-lg-6">
                            <table class="table table-borderless mt-2">
                                <tbody>
                                    <tr>
                                        <th>First Name:</th>
                                        <td id="firstNameBook">Peter</td>
                                    </tr>
                                    <tr>
                                        <th>Last Name:</th>
                                        <td id="lastNameBook">Crouch</td>
                                    </tr>
                                    <tr>
                                        <th>Medical Specialty:</th>
                                        <td id="medicalSpecialtyBook">Allergist</td>
                                    </tr>
                                    <tr id="officeAddressBookTR">
                                        <th>Office Address:</th>
                                        <td id="officeAddressBook">Andrea Papandreou 26, Athens</td>
                                    </tr>
                                    <tr><th>Working hours:</th><td>Tuesday, 17:00-21:00</td></tr>
                                    <tr><th></th><td>Thursday, 17:00-21:00</td></tr>
                                    <tr><th></th><td>Friday, 17:00-21:00</td></tr>
                                    <tr id="doctorEmailBookTR">
                                        <th>Email:</th>
                                        <td id="doctorEmailBook">doctor8@ghn.gr</td>
                                    </tr>
                                    <tr>
                                        <th>Telephone:</th>
                                        <td id="doctorTelephoneBook">+306986765234</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-lg-4">
                            <div class="row" id="bookapointmentsection">
                                <div class="col-md-12">
                                    <form id="bookAppointmentForm" novalidate="novalidate">
                                        <input name="__RequestVerificationToken" type="hidden" value="5CuwLvTOCFoebjSXzNX7U6AWCREnlkcfr4_JFDuv01vegpvDUDojVrn4rh1xq9x4hwOtxw5dJptuQhJIPWVnIowM_KbaC8V-RM_nZoyO6M3nYVTzGcerOf58D6sDk2LKIZI5y4pMpoAbMOo_J4e85w2">
                                        <div class="validation-summary-errors text-danger">
                                            <ul>
                                            </ul>
                                        </div>
                                        <div class="form-group">
                                            <input data-val="true" data-val-required="The Doctor field is required." id="Appointment_DoctorId" name="Appointment.DoctorId" type="hidden" value="08e6d3e4-9526-4e40-97fb-52ca512a26ef">
                                        </div>
                                        <div class="form-group">
                                            <input data-val="true" data-val-required="The Patient field is required." id="Appointment_InsuredId" name="Appointment.InsuredId" type="hidden" value="9b62f3b7-59ea-479b-8270-4eca13a55b48">
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-12 control-label" for="Appointment_AppointmentDate">Appointment date</label>
                                            <div class="col-md-10">
                                                <input class="form-control valid" data-val="true" data-val-date="The field Appointment date must be a date." data-val-required="The Appointment date field is required." id="Appointment_AppointmentDate" name="Appointment.AppointmentDate" type="date" value="" min="2020-01-17" aria-describedby="Appointment_AppointmentDate-error" aria-invalid="false">
                                                <span class="text-danger field-validation-valid" data-valmsg-for="Appointment.AppointmentDate" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div id="NoAvailableAppointments" class="form-group" style="display: none;">
                                            <div class="row">
                                                <p> We are sorry but all the doctor's appointments are booked on this day. Please try choose another day. </p>
                                            </div>
                                        </div>
                                        <div id="NoWorkingDay" class="form-group" style="display: none;">
                                            <div class="row">
                                                <p> We are sorry but the doctor does not work on this day. Please try choose another day. </p>
                                            </div>
                                        </div>
                                        <div id="appointmentTime" class="form-group" style="">
                                            <label class="col-md-12 control-label" for="Appointment_AppointmentStartTime">Appointment time</label>
                                            <div class="col-md-10">
                                                <select class="form-control" data-val="true" data-val-required="The Appointment time field is required." id="Appointment_AppointmentStartTime" name="Appointment.AppointmentStartTime"><option value="18:00:00">18:00 - 18:30</option><option value="18:30:00">18:30 - 19:00</option><option value="19:00:00">19:00 - 19:30</option><option value="20:00:00">20:00 - 20:30</option><option value="20:30:00">20:30 - 21:00</option></select>
                                                <span class="field-validation-valid text-danger" data-valmsg-for="Appointment.AppointmentStartTime" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div id="insuredComments" class="form-group" style="">
                                            <label class="col-md-12 control-label" for="Appointment_InsuredComments">Comments for doctor</label>
                                            <div class="col-md-10">
                                                <textarea class="form-control" cols="20" id="Appointment_InsuredComments" name="Appointment.InsuredComments" rows="2"></textarea>
                                                <span class="field-validation-valid text-danger" data-valmsg-for="Appointment.InsuredComments" data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div id="bookAppointmentButton" class="form-group" style="">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input id="bookAppointment" type="submit" class="btn btn-outline-dark" value="Book Appointment">
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section customScripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var insuredIsActive = @(insuredIsActive ? "true" : "false");
            var isUserInsured = @(User.IsInRole("Insured") ? "true" : "false");
            function listAvailableAppointments(date, doctorId) {
                $.ajax({
                    dataType: 'json',
                    type: 'get',
                    url: '/api/Search/GetAvailableAppointmentSlots?appointmentDay=' + date + '&doctorId=' + doctorId,
                    success: function (data) {
                        $('#NoWorkingDay').hide();
                        if (data.length == 0) {
                            $('#appointmentTime').hide();
                            $('#insuredComments').hide();
                            $('#bookAppointmentButton').hide();
                            $('#NoAvailableAppointments').show();
                        }
                        else {
                            $('#NoAvailableAppointments').hide();
                            $('#appointmentTime').show();
                            $('#insuredComments').show();
                            $('#bookAppointmentButton').show();
                            const selectTime = $('#Appointment_AppointmentStartTime');
                            $(selectTime).children().remove();
                            data.forEach(function (appointmentSlot) {
                                const splittedStartTime = appointmentSlot.AppointmentStartTime.split(':');
                                const splittedEndTime = appointmentSlot.AppointmentEndTime.split(':');
                                const option = $(document.createElement('option'));
                                $(option).text(splittedStartTime[0] + ':' + splittedStartTime[1] + ' - ' + splittedEndTime[0] + ':' + splittedEndTime[1]);
                                $(option).val(appointmentSlot.AppointmentStartTime);
                                $(selectTime).append(option);
                            });
                        }
                        $('#normalContainerBook').show();
                        $('#bookAppointments').modal('show');
                    },
                    error: function () {
                        $('#appointmentTime').hide();
                        $('#insuredComments').hide();
                        $('#bookAppointmentButton').hide();
                        $('#NoAvailableAppointments').hide();
                        $('#NoWorkingDay').show();
                        $('#normalContainerBook').show();
                        $('#bookAppointments').modal('show');
                    }
                })
            }
            function ListDoctors(firstName, lastName, specialty, appointmentDate) {
                if (appointmentDate == "") {
                    appointmentDate = "0001-01-01";
                }
                $.ajax({
                    dataType: 'json',
                    type: 'get',
                    url: '/api/Search/SearchDoctorResults?doctorsFirstName=' + firstName + '&doctorsLastName=' + lastName + '&doctorsSpecialty=' + specialty + '&appointmentDate=' + appointmentDate,
                    success: function (data) {
                        $('#doctorsList').empty();
                        if (data.length == 0) {
                            $("#doctorsList").append('<div class="col-md-12 col-sm-12 col-xs-12"><p> There are no doctors matching these criteria. </p><div>')
                        }
                        else {
                            data.forEach(function (doctor) {
                                $('#doctorsList').append('<div class="col-md-3 col-sm-6 col-xs-12"><div class="img-thumbnail">' +
                                    '<img src="@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture + '" alt="' + doctor.User.ProfilePicture + '">' +
                                    '<div><h5>' + doctor.User.FirstName +  '</h5><h5>' + doctor.User.LastName + '</h5>' +
                                    '<p>' + doctor.MedicalSpecialty + '</p> <button class="btn btn-outline-dark btn-sm showDoctorDetails" data-id="' + doctor.UserId + '">View Details</button>' +
                                    @if (User.IsInRole("Insured")) {
                                        @(new HtmlString("'<button class=\"btn btn-outline-dark btn-sm showDoctorMessage\" data-id=\"' + doctor.UserId + '\">Message</button><button class=\"btn btn-outline-dark btn-sm bookAppointments\" data-id=\"' + doctor.UserId + '\">Book Appointment</button></div></div></div>'"));
                                    }else {
                                        @(new HtmlString("'</div></div></div>'"));
                                    });
                            });
                        }
                        $('#send').click(function (e) {
                            if ($('#send').hasClass("noClick")) {
                                e.preventDefault();
                            }
                            else {
                                $('#send').addClass("noClick");
                                const $form = $('#messagearea');
                                $.validator.unobtrusive.parse($form);
                                $form.validate();
                                if ($form.valid()) {
                                    let model = new Object();
                                    model.Message = new Object();
                                    model.Message.ConversationId = 0;
                                    model.Message.SenderId = $('#Message_SenderId').val();
                                    model.Message.RecipientId = $('#Message_RecipientId').val();
                                    model.Message.Subject = $('#Message_Subject').val();
                                    model.Message.MessageText = $('#Message_MessageText').val();
                                    model.FirstName = "";
                                    model.LastName = "";
                                    model.InsuredPlans = [];
                                    model.DoctorSpecialty = -1;
                                    model.MedicalSpecialties = [];
                                    model.AppointmentDate = null;
                                    model.UserName = $('#UserName1').val();
                                    model.Password = $('#Password1').val();
                                    model.RememberMe = false;
                                    model.VisitorMessage = null;
                                    model = JSON.stringify(model)
                                    $.ajax({
                                        contentType: 'application/json',
                                        type: 'post',
                                        url: '/api/Messages',
                                        data: model,
                                        cache: false,
                                        processData: false,
                                        success: function () {
                                            $('#Message_Subject').val("");
                                            $('#Message_MessageText').val("");
                                            $('#normalContainerMessage').hide();
                                            $('#errorContainerMessage').hide();
                                            $('#successContainerMessage').show();
                                            setTimeout(function () {
                                                $('#newMessage').modal("hide");
                                            }, 3000)
                                        },
                                        error: function (error) {
                                            $('#errorContainerMessage').show();
                                            const errorObject = error.responseJSON.ModelState;
                                            $('#messagearea div.validation-summary-errors > ul').children().remove();
                                            for (var property in errorObject) {
                                                if (errorObject.hasOwnProperty(property)) {
                                                    if (property == '') {
                                                        $('#messagearea div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                                    }
                                                }
                                            }
                                            const $form = $('#messagearea');
                                            $.validator.unobtrusive.parse($form);
                                            $form.validate();
                                            if (!$form.valid()) {
                                                $.each($form.validate().errorList, function (key, value) {
                                                    const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                                    $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                                    $errorSpan.show();
                                                });
                                            }
                                        }
                                    });
                                }
                                else {
                                    $('#errorContainerMessage').show();
                                    console.log($form.validate().errorList);
                                    $.each($form.validate().errorList, function (key, value) {
                                        console.log(value);
                                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                        $errorSpan.show();
                                    });
                                }
                                setTimeout(function() {
                                    $('#send').removeClass("noClick");
                                }, 4000);
                            }
                        })
                        $('.showDoctorDetails').click(function (e) {
                            let id = $(e.target).data('id');
                            $.ajax({
                                url: '/api/Search/SearchDoctorById/' + id,
                                type: 'get',
                                dataType: 'json',
                                success: function (doctor) {
                                    $('#errorContainer').hide();
                                    $('#profileSection img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture);
                                    $('#firstName').text(doctor.User.FirstName);
                                    $('#lastName').text(doctor.User.LastName);
                                    $('#medicalSpecialty').text(doctor.MedicalSpecialty);
                                    $('#officeAddress').text(doctor.OfficeAddress);
                                    let elem = $('#officeAddressTR');
                                    while ($(elem).next()[0].id != 'doctorEmailTR') {
                                        const next = $(elem).next();
                                        $(next).remove();
                                    }
                                    if (doctor.WorkingHours.length == 0) {
                                        $(elem).after('<tr><th>Working hours:</th><td> Doctor has not declared any working hours yet. </td></tr>');
                                    }
                                    else {
                                        for (let i = 0; i < doctor.WorkingHours.length; i++) {
                                            if (i == 0) {
                                                const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                $(elem).after('<tr><th>Working hours:</th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                            }
                                            else {
                                                const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                $(elem).after('<tr><th></th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                            }
                                            elem = $(elem).next();
                                        }
                                    }
                                    $('#doctorEmail').text(doctor.User.Email);
                                    $('#doctorTelephone').text(doctor.User.PhoneNumber);
                                    $('#normalContainer').show();
                                    $('#doctorDetails').modal('show');
                                },
                                error: function () {
                                    $('#normalContainer').hide();
                                    $('#errorContainer').show();
                                }
                            })
                        });
                        $('.showDoctorMessage').click(function (e) {
                            let id = $(e.target).data('id');
                            $('#errorContainerMessage').hide();
                            $('#successContainerMessage').hide();
                            $('#Message_RecipientId').val(id);
                            $('#normalContainerMessage').show();
                            $('#newMessage').modal('show');
                        })
                        if (isUserInsured && !insuredIsActive) {
                            $('.showDoctorMessage').prop('disabled', true);
                            $('.showDoctorMessage').off('click');
                            $('.bookAppointments').prop('disabled', true);
                            $('.bookAppointments').off('click');
                            $('#send').prop('disabled', true);
                            $('#send').off('click');
                            $('#bookAppointment').prop('disabled', true);
                            $('#bookAppointment').off('click');
                        }
                        $("#newMessage").on("hidden.bs.modal", function () {
                            $('#Message_Subject').val("");
                            $('#Message_MessageText').val("");
                        });
                        $('.bookAppointments').click(function (e) {
                            let id = $(e.target).data('id');
                            $.ajax({
                                url: '/api/Search/SearchDoctorById/' + id,
                                type: 'get',
                                dataType: 'json',
                                success: function (doctor) {
                                    $('#errorContainerBook').hide();
                                    $('#profilepictureBook img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture);
                                    $('#firstNameBook').text(doctor.User.FirstName);
                                    $('#lastNameBook').text(doctor.User.LastName);
                                    $('#medicalSpecialtyBook').text(doctor.MedicalSpecialty);
                                    $('#officeAddressBook').text(doctor.OfficeAddress);
                                    let elem = $('#officeAddressBookTR');
                                    while ($(elem).next()[0].id != 'doctorEmailBookTR') {
                                        const next = $(elem).next();
                                        $(next).remove();
                                    }
                                    if (doctor.WorkingHours.length == 0) {
                                        $(elem).after('<tr><th>Working hours:</th><td> Doctor has not declared any working hours yet. </td></tr>');
                                    }
                                    else {
                                        for (let i = 0; i < doctor.WorkingHours.length; i++) {
                                            if (i == 0) {
                                                const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                $(elem).after('<tr><th>Working hours:</th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                            }
                                            else {
                                                const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                $(elem).after('<tr><th></th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                            }
                                            elem = $(elem).next();
                                        }
                                    }
                                    const appointmentDate = $('#AppointmentDate').val();
                                    $('#doctorEmailBook').text(doctor.User.Email);
                                    $('#doctorTelephoneBook').text(doctor.User.PhoneNumber);
                                    $('#Appointment_DoctorId').val(doctor.UserId);
                                    $('#Appointment_InsuredId').val('@CurrentUserId');
                                    $('#Appointment_AppointmentDate').val(appointmentDate);
                                    if (appointmentDate == "" || appointmentDate == undefined) {
                                        $('#appointmentTime').hide();
                                        $('#insuredComments').hide();
                                        $('#bookAppointmentButton').hide();
                                        $('#NoAvailableAppointments').hide();
                                        $('#NoWorkingDay').hide();
                                        $('#normalContainerBook').show();
                                        $('#bookAppointments').modal('show');
                                    }
                                    else {
                                        listAvailableAppointments(appointmentDate, doctor.UserId);
                                    }
                                },
                                error: function () {
                                    $('#normalContainerBook').hide();
                                    $('#errorContainerBook').show();
                                }
                            })
                        });
                    },
                    error: function () {
                        $('#doctorsList').empty();
                        $('#doctorsList').append('<div class="col-md-12 col-sm-12 col-xs-12"><p> There are no doctors matching these criteria. </p><div>');
                    }
                })
            }
            $('#Appointment_InsuredComments').val('');
            ListDoctors('', '', -1, '0001-01-01');
            const today = new Date();
            const day = String(today.getDate()).padStart(2, '0');
            const month = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            const year = today.getFullYear();
            $('#AppointmentDate').attr('min', year + '-' + month + '-' + day);
            $('#Appointment_AppointmentDate').attr('min', year + '-' + month + '-' + day);
            $('#search').on('submit', function (e) {
                e.preventDefault();
                if (e.target[3].type == 'date') {
                    ListDoctors(e.target[0].value, e.target[1].value, e.target[2].value, e.target[3].value);
                }
                else {
                    ListDoctors(e.target[0].value, e.target[1].value, e.target[2].value, '0001-01-01');
                }
            })
            $('#bookAppointments').on('hidden.bs.modal', function () {
                $('#NoAvailableAppointments').hide();
                $('#NoWorkingDay').hide();
                $('#Appointment_InsuredComments').val('');
                $('#bookAppointmentForm div.validation-summary-errors > ul').children().remove();
            })
            $('#Appointment_AppointmentDate').on('change', function () {
                $('#bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                const appointmentDate = $('#Appointment_AppointmentDate').val();
                if (appointmentDate == "") {
                    $('#appointmentTime').hide();
                    $('#insuredComments').hide();
                    $('#bookAppointmentButton').hide();
                    $('#NoAvailableAppointments').hide();
                    $('#NoWorkingDay').hide();
                }
                else {
                    listAvailableAppointments(appointmentDate, $('#Appointment_DoctorId').val());
                }
            })
            $('#bookAppointment').click(function (e) {
                e.preventDefault();
                const $form = $('#bookAppointmentForm');
                $.validator.unobtrusive.parse($form);
                $form.validate();
                if ($form.valid()) {
                    let model = new Object();
                    model.DoctorId = $('#Appointment_DoctorId').val();
                    model.InsuredId = $('#Appointment_InsuredId').val();
                    model.AppointmentDate = $('#Appointment_AppointmentDate').val();
                    model.AppointmentStartTime = $('#Appointment_AppointmentStartTime').val();
                    model.InsuredComments = $('#Appointment_InsuredComments').val();
                    model = JSON.stringify(model)
                    $.ajax({
                        contentType: 'application/json',
                        type: 'post',
                        url: '/api/BookAppointment',
                        data: model,
                        cache: false,
                        processData: false,
                        success: function (response) {
                            $('#bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                            $('#Appointment_InsuredComments').val('');
                            console.log(response);
                            if (response.appointmentCharge > 0) {
                                window.location.replace('/' + response.controller + '/' + response.action + '?id=' + response.id + '&appointmentCharge=' + response.appointmentCharge);
                            }
                            else {
                                window.location.replace('/' + response.controller + '/' + response.action + '?id=' + response.id);
                            }
                        },
                        error: function (error) {
                            const errorObject = error.responseJSON.ModelState;
                            $('#bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                            for (var property in errorObject) {
                                if (errorObject.hasOwnProperty(property)) {
                                    if (property == '') {
                                        $('#bookAppointmentForm div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                    }
                                }
                            }
                            const $form = $('#bookAppointmentForm');
                            $.validator.unobtrusive.parse($form);
                            $form.validate();
                            if (!$form.valid()) {
                                $.each($form.validate().errorList, function (key, value) {
                                    const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                    $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                    $errorSpan.show();
                                });
                            }
                        }
                    });
                }
                else {
                    console.log($form.validate().errorList);
                    $.each($form.validate().errorList, function (key, value) {
                        console.log(value);
                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                        $errorSpan.show();
                    });
                }
            })
        })
    </script>
}

