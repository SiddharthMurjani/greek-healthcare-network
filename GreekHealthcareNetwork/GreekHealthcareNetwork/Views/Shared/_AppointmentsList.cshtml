@model GreekHealthcareNetwork.Models.SearchLoginViewModel
@using Microsoft.AspNet.Identity;
@{
    Layout = "~/Views/Shared/_CustomScriptsLayout.cshtml";
    var CurrentUserId = User.Identity.GetUserId();
}

@section cssScripts{
    <link href="@Url.Content("~/Content/TestPlaton.css")" type="text/css" rel="stylesheet" />
}

<table class="table mt-4">
    <thead>
        <tr>
            <th scope="col"></th>
            @if (User.IsInRole("Doctor"))
            {
                <th scope="col">Patient</th>
            }
            @if (User.IsInRole("Insured"))
            {
                <th scope="col">Doctor</th>
                <th scope="col">Specialty</th>
            }
            <th scope="col">Date</th>
            <th scope="col">Time</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody id="appointmentsList">
    </tbody>
</table>

<div class="modal fade" id="appointmentDetailsModal" tabindex="-1" role="dialog" aria-labelledby="appointmentDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="appointmentDetailsModalLabel">Appointment Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @if (User.IsInRole("Doctor"))
                    {
                        <div class="col">
                            <h4>Patient</h4>
                            <div class="row mt-2">
                                <div id="insuredsPicture" class="col-4">
                                    <img class="rounded-circle" src="">
                                </div>
                                <div class="col-8">
                                    <h5 id="insuredsFirstName"></h5>
                                    <h5 id="insuredsLastName"></h5>
                                    <p id="insuredsAge"></p>
                                </div>
                            </div>
                        </div>
                    }
                    @if (User.IsInRole("Insured"))
                    {
                        <div class="col">
                            <h4>Doctor</h4>
                            <div class="row mt-2">
                                <div id="doctorsPicture" class="col-4">
                                    <img class="rounded-circle" src="">
                                </div>
                                <div class="col-8">
                                    <h5 id="doctorsFirstName"></h5>
                                    <h5 id="doctorsLastName"></h5>
                                    <p id="Specialty"></p>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col">
                        <h4>Details</h4>
                        <div class="mt-2">
                            <p id="appointmentDateTime"></p>
                            <p id="status"></p>
                        </div>
                    </div>
                </div>
                <div class="row mt-5">
                    <div class="col">
                        <h6>@(User.IsInRole("Insured") ? "Your comments to Doctor:" : "Patient's comments:")</h6>
                        <p id="patientComments"></p>
                        @if (User.IsInRole("Doctor"))
                        {
                            <h6>Your Comments:</h6>
                            <p id="doctorsComments"></p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirm-cancel-modal" tabindex="-1" role="dialog" aria-labelledby="confirm-cancel-modalLabel" aria-hidden="true">
    <div id="myModalContent">
        @*<div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Appointment Cancellation</h4>
                </div>
                <div class="modal-body">
                    <p>You are about to cancel your appointment on @Model.AppointmentDate with the @Model.DoctorSpecialty Dr.</p>
                    <p>Are still want to cancel it?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                    <a class="btn btn-danger btn-ok">Yes</a>
                </div>
            </div>
        </div>*@
    </div>
</div>

<div class="modal fade" id="edit-modal" tabindex="-1" role="dialog" aria-labelledby="edit-modalLabel" aria-hidden="true">
    <div id="myEditModalContent">
        
    </div>
</div>
@Html.Partial("_NewMessage")
@section AppointmentScripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var isUserDoctor = @(User.IsInRole("Doctor") ? "true" : "false");
            var isUserInsured = @(User.IsInRole("Insured") ? "true" : "false");

            console.log('isUserDoctor:' + isUserDoctor);
            console.log('isUserInsured:' + isUserInsured);
            function listAvailableAppointments(currentSlot, currentDate, date, doctorId) {
                $.ajax({
                    dataType: 'json',
                    type: 'get',
                    url: '/api/Search/GetAvailableAppointmentSlots?appointmentDay=' + date + '&doctorId=' + doctorId,
                    success: function (data) {
                        $('#myEditModalContent #NoWorkingDay').hide();
                        if (data.length == 0) {
                            $('#myEditModalContent #appointmentTime').hide();
                            $('#myEditModalContent #insuredComments').hide();
                            $('#myEditModalContent #bookAppointmentButton').hide();
                            $('#myEditModalContent #NoAvailableAppointments').show();
                        }
                        else {
                            $('#myEditModalContent #NoAvailableAppointments').hide();
                            $('#myEditModalContent #appointmentTime').show();
                            $('#myEditModalContent #insuredComments').show();
                            $('#myEditModalContent #bookAppointmentButton').show();
                            const selectTime = $('#myEditModalContent #AppointmentStartTime');
                            $(selectTime).children().remove();
                            let found = false;
                            const chosenDate = data[0].AppointmentDate.split('T')[0];
                            const reformedCurrentDate = currentDate.split('-')[2] + '-' + currentDate.split('-')[1] + '-' + currentDate.split('-')[0];
                            const currentStartTime = currentSlot.split(' - ')[0];
                            const currentEndTime = currentSlot.split(' - ')[1];
                            const currentSlotValue = currentStartTime + ':00';
                            data.forEach(function (appointmentSlot) {
                                const splittedStartTime = appointmentSlot.AppointmentStartTime.split(':');
                                const splittedEndTime = appointmentSlot.AppointmentEndTime.split(':');
                                const option = $(document.createElement('option'));
                                if (chosenDate == reformedCurrentDate) {                                    
                                    if (currentStartTime < (splittedStartTime[0] + ':' + splittedStartTime[1]) && !found) {
                                        found = true;
                                        const selectedOption = $(document.createElement('option'));
                                        $(selectedOption).text(currentStartTime + ' - ' + currentEndTime);
                                        $(selectedOption).val(currentSlotValue);
                                        $(selectedOption).prop('selected', true);
                                        $(selectTime).append(selectedOption);
                                    }
                                }
                                $(option).text(splittedStartTime[0] + ':' + splittedStartTime[1] + ' - ' + splittedEndTime[0] + ':' + splittedEndTime[1]);
                                $(option).val(appointmentSlot.AppointmentStartTime);
                                $(selectTime).append(option);
                            });
                        }
                        $('#myEditModalContent #normalContainerBook').show();
                        $('#edit-modal').modal('show');
                    },
                    error: function () {
                        $('#myEditModalContent #appointmentTime').hide();
                        $('#myEditModalContent #insuredComments').hide();
                        $('#myEditModalContent #bookAppointmentButton').hide();
                        $('#myEditModalContent #NoAvailableAppointments').hide();
                        $('#myEditModalContent #NoWorkingDay').show();
                        $('#myEditModalContent #normalContainerBook').show();
                        $('#edit-modal').modal('show');
                    }
                })
            }
            function ListAppointments(firstName, lastName, specialty, appointmentDate, userId) {
                    if (appointmentDate == "") {
                        appointmentDate = "0001-01-01";
                    }
                    $.ajax({
                        dataType: 'json',
                        type: 'get',
                        url: '/api/Search/AppointmentsSearchResults?firstName=' + firstName +
                                                                         '&lastName=' + lastName +
                                                                         '&doctorsSpecialty=' + specialty +
                                                                         '&appointmentDay=' + appointmentDate +
                                                                         '&userId=' + userId,
                        success: function (data) {
                            $('#appointmentsList').empty();
                            console.log('Step1');
                            console.log(data.length);
                            if (data.length == 0) {
                                $("#appointmentsList").append('<tr><td colspan="7">There are no appointments matching these criteria.</td></tr>');
                            }
                            else {
                                console.log('Step2')
                                console.log(data.length);
                                console.log(data)
                                data.forEach(function (appointment) {
                                    console.log('Step3');
                                    const appointmentStart = appointment.AppointmentStartTime.split(":");
                                    const appointmentEnd = appointment.AppointmentEndTime.split(":");
                                    const appointmentUnformatedDate = appointment.AppointmentDate.split("T");
                                    const appointmentDate = appointmentUnformatedDate[0].split("-");
                                    const tr = $(document.createElement('tr'));
                                    if (isUserInsured) {
                                        $(tr).append(
                                            '<td><img src="@Url.Content("~/Content/img/Doctors/")' + appointment.Doctor.User.Id + '/' + appointment.Doctor.User.ProfilePicture + '" alt="' + appointment.Doctor.User.ProfilePicture + '"' + 'class="rounded-circle"></td>' +
                                            '<td>' + appointment.Doctor.User.FirstName + ' ' + appointment.Doctor.User.LastName + '</td>' +
                                            '<td>' + appointment.Doctor.MedicalSpecialty + '</td>'
                                        );
                                    }
                                    if (isUserDoctor) {
                                        $(tr).append(
                                            '<td><img src="@Url.Content("~/Content/img/Insureds/")' + appointment.Insured.User.Id + '/' + appointment.Insured.User.ProfilePicture + '" alt="' + appointment.Doctor.User.ProfilePicture + '"' + 'class="rounded-circle"></td>' +
                                            '<td>' + appointment.Insured.User.FirstName + ' ' + appointment.Insured.User.LastName + '</td>'
                                        );
                                    }
                                    $(tr).append(
                                        '<td>' + appointmentDate[2] + "-" + appointmentDate[1] + "-" + appointmentDate[0] + '</td>' +
                                        '<td>' + appointmentStart[0] + ':' + appointmentStart[1] + ' - ' + appointmentEnd[0] + ':' + appointmentEnd[1] + '</td>' +
                                        '<td>' + appointment.AppointmentStatus + '</td>' +
                                        '<td>' +
                                        (isUserDoctor ? '<button type="button" class="btn btn-light showAppointmentDetails table-button" data-id="' + appointment.Id + '">View</button><button class="btn btn-light table-button sendMessage" data-id="' + appointment.Insured.User.Id + '">Message</button>' : '<button class="btn btn-light table-button sendMessage" data-id="' + appointment.Doctor.User.Id + '">Message</button>') +
                                        ((appointment.AppointmentStatus != "Upcoming" && isUserInsured)  ? '<button type="button" class="btn btn-light showAppointmentDetails table-button" data-id="' + appointment.Id + '">View</button>' : '') +
                                        ((appointment.AppointmentStatus == "Upcoming" && isUserInsured) ? '<button type="button" class="btn btn-success editAppointmentDetails table-button" data-id="' + appointment.Id + '">Edit</button>' : '') +
                                        ((appointment.AppointmentStatus == "Upcoming") ? '<button class="btn btn-danger table-button cancel-appointment" data-id="' + appointment.Id + '">Cancel</button>' : '') +
                                        '</td>'
                                    );
                                    $('#appointmentsList').append(tr);
                                });
                            }
                            $('.sendMessage').click(function (e) {
                                let id = $(e.target).data('id');
                                $('#errorContainerMessage').hide();
                                $('#successContainerMessage').hide();
                                $('#Message_RecipientId').val(id);
                                $('#normalContainerMessage').show();
                                $('#newMessage').modal('show');
                            })
                            $('#send').click(function (e) {
                                if ($('#send').hasClass("noClick")) {
                                    e.preventDefault();
                                }
                                else {
                                    $('#send').addClass("noClick");
                                    const $form = $('#messagearea');
                                    $.validator.unobtrusive.parse($form);
                                    $form.validate();
                                    if ($form.valid()) {
                                        let model = new Object();
                                        model.Message = new Object();
                                        model.Message.ConversationId = 0;
                                        model.Message.SenderId = $('#Message_SenderId').val();
                                        model.Message.RecipientId = $('#Message_RecipientId').val();
                                        model.Message.Subject = $('#Message_Subject').val();
                                        model.Message.MessageText = $('#Message_MessageText').val();
                                        model.FirstName = "";
                                        model.LastName = "";
                                        model.InsuredPlans = [];
                                        model.DoctorSpecialty = -1;
                                        model.MedicalSpecialties = [];
                                        model.AppointmentDate = null;
                                        model.UserName = $('#UserName1').val();
                                        model.Password = $('#Password1').val();
                                        model.RememberMe = false;
                                        model.VisitorMessage = null;
                                        model = JSON.stringify(model)
                                        $.ajax({
                                            contentType: 'application/json',
                                            type: 'post',
                                            url: '/api/Messages',
                                            data: model,
                                            cache: false,
                                            processData: false,
                                            success: function () {
                                                $('#Message_Subject').val("");
                                                $('#Message_MessageText').val("");
                                                $('#normalContainerMessage').hide();
                                                $('#errorContainerMessage').hide();
                                                $('#successContainerMessage').show();
                                                setTimeout(function () {
                                                    $('#newMessage').modal("hide");
                                                }, 3000)
                                            },
                                            error: function (error) {
                                                $('#errorContainerMessage').show();
                                                const errorObject = error.responseJSON.ModelState;
                                                $('#messagearea div.validation-summary-errors > ul').children().remove();
                                                for (var property in errorObject) {
                                                    if (errorObject.hasOwnProperty(property)) {
                                                        if (property == '') {
                                                            $('#messagearea div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                                        }
                                                    }
                                                }
                                                const $form = $('#messagearea');
                                                $.validator.unobtrusive.parse($form);
                                                $form.validate();
                                                if (!$form.valid()) {
                                                    $.each($form.validate().errorList, function (key, value) {
                                                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                                        $errorSpan.show();
                                                    });
                                                }
                                            }
                                        });
                                    }
                                    else {
                                        $('#errorContainerMessage').show();
                                        console.log($form.validate().errorList);
                                        $.each($form.validate().errorList, function (key, value) {
                                            console.log(value);
                                            const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                            $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                            $errorSpan.show();
                                        });
                                    }
                                    setTimeout(function() {
                                        $('#send').removeClass("noClick");          
                                    }, 4000);
                                }
                            })
                            //fixFooterPosition(data.length);
                            $('.showAppointmentDetails').click(function (e) {
                                console.log('view button clicked');
                                let id = $(e.target).data('id');
                                console.log('id is:' + id)
                                $.ajax({
                                    url: '/api/Search/SearchAppointmentById/' + id,
                                    type: 'get',
                                    dataType: 'json',
                                    success: function (appointment) {
                                        console.log('Into modal')
                                        const appointmentStart = appointment.AppointmentStartTime.split(":");
                                        const appointmentEnd = appointment.AppointmentEndTime.split(":");
                                        const appointmentUnformatedDate = appointment.AppointmentDate.split("T");
                                        const appointmentDate = appointmentUnformatedDate[0].split("-");

                                        if (isUserInsured) {
                                            $('#doctorsPicture img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + appointment.Doctor.User.Id + '/' + appointment.Doctor.User.ProfilePicture);
                                            $('#doctorsFirstName').text(appointment.Doctor.User.FirstName);
                                            $('#doctorsLastName').text(appointment.Doctor.User.LastName);

                                            $('#Specialty').text(appointment.Doctor.MedicalSpecialty);
                                            $('#appointmentDateTime').text(appointmentDate[2] + '-' + appointmentDate[1] + '-' + appointmentDate[0] + ' ' + appointmentStart[0] + ':' + appointmentStart[1] + ' - ' + appointmentEnd[0] + ':' + appointmentEnd[1]);
                                            $('#status').text('Status: ' + appointment.AppointmentStatus);
                                            $('#patientComments').text(appointment.InsuredComments);
                                            $('#appointmentDetailsModal').modal('show');
                                        }

                                        if (isUserDoctor) {
                                            const dOB = appointment.Insured.User.DoB.split("T");
                                            $('#insuredsPicture img').attr('src', '@Url.Content("~/Content/img/Insureds/")' + appointment.Insured.User.Id + '/' + appointment.Insured.User.ProfilePicture);
                                            $('#insuredsFirstName').text(appointment.Insured.User.FirstName);
                                            $('#insuredsLastName').text(appointment.Insured.User.LastName);

                                            $('#Specialty').text(dOB[0]);
                                            $('#appointmentDateTime').text(appointmentDate[2] + '-' + appointmentDate[1] + '-' + appointmentDate[0] + ' ' + appointmentStart[0] + ':' + appointmentStart[1] + ' - ' + appointmentEnd[0] + ':' + appointmentEnd[1]);
                                            $('#status').text('Status: ' + appointment.AppointmentStatus);
                                            $('#patientComments').text(appointment.InsuredComments);
                                            $('#doctorComments').text(appointment.DoctorComments);
                                            $('#appointmentDetailsModal').modal('show');
                                        }

                                    },
                                    error: function () {
                                        console.log('error')
                                    }
                                })
                            });
                            $('.editAppointmentDetails').click(function (e) {
                                let id = $(e.target).data('id');
                                $.ajax({
                                    type: "GET",
                                    url: '/Appointments/EditAppointmentDetails',
                                    contentType: "application/json; charset=utf-8",
                                    data: { "appointmentId": id },
                                    datatype: "json",
                                    success: function (data) {
                                        $('#myEditModalContent').html(data);
                                        let doctorId = $('#myEditModalContent #DoctorId').val()
                                        $.ajax({
                                            url: '/api/Search/SearchDoctorById/' + doctorId,
                                            type: 'get',
                                            dataType: 'json',
                                            success: function (doctor) {
                                                $('#myEditModalContent #errorContainerBook').hide();
                                                $('#myEditModalContent #profilepictureBook img').attr('src', '@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture);
                                                $('#myEditModalContent #firstNameBook').text(doctor.User.FirstName);
                                                $('#myEditModalContent #lastNameBook').text(doctor.User.LastName);
                                                $('#myEditModalContent #medicalSpecialtyBook').text(doctor.MedicalSpecialty);
                                                $('#myEditModalContent #officeAddressBook').text(doctor.OfficeAddress);
                                                let elem = $('#myEditModalContent #officeAddressBookTR');
                                                while ($(elem).next()[0].id != 'doctorEmailBookTR') {
                                                    const next = $(elem).next();
                                                    $(next).remove();
                                                }
                                                if (doctor.WorkingHours.length == 0) {
                                                    $(elem).after('<tr><th>Working hours:</th><td> Doctor has not declared any working hours yet. </td></tr>');
                                                }
                                                else {
                                                    for (let i = 0; i < doctor.WorkingHours.length; i++) {
                                                        if (i == 0) {
                                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                            $(elem).after('<tr><th>Working hours:</th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                                        }
                                                        else {
                                                            const workStartTime = doctor.WorkingHours[i].WorkStartTime.split(':');
                                                            const workEndTime = doctor.WorkingHours[i].WorkEndTime.split(':');
                                                            $(elem).after('<tr><th></th><td>' + doctor.WorkingHours[i].Day + ', ' + workStartTime[0] + ':' + workStartTime[1] + '-' + workEndTime[0] + ':' + workEndTime[1] + '</td></tr>')
                                                        }
                                                        elem = $(elem).next();
                                                    }
                                                }                                                
                                                $('#myEditModalContent #doctorEmailBook').text(doctor.User.Email);
                                                $('#myEditModalContent #doctorTelephoneBook').text(doctor.User.PhoneNumber);
                                                const today = new Date();
                                                const day = String(today.getDate()).padStart(2, '0');
                                                const month = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                                                const year = today.getFullYear();
                                                $('#myEditModalContent #AppointmentDate').attr('min', year + '-' + month + '-' + day); 
                                                $('#myEditModalContent #AppointmentDate').off('change');
                                                $('#myEditModalContent #AppointmentDate').on('change', function () {
                                                    $('#myEditModalContent #bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                                                    const appointmentDate = $('#myEditModalContent #AppointmentDate').val();
                                                    if (appointmentDate == "") {
                                                        $('#myEditModalContent #appointmentTime').hide();
                                                        $('#myEditModalContent #insuredComments').hide();
                                                        $('#myEditModalContent #bookAppointmentButton').hide();
                                                        $('#myEditModalContent #NoAvailableAppointments').hide();
                                                        $('#myEditModalContent #NoWorkingDay').hide();
                                                    }
                                                    else {
                                                        const currentSlot = $(e.target).parent().prev().prev().text();
                                                        const currentDate = $(e.target).parent().prev().prev().prev().text();
                                                        listAvailableAppointments(currentSlot, currentDate, appointmentDate, $('#myEditModalContent #DoctorId').val());
                                                    }
                                                })
                                                $('#myEditModalContent #bookAppointment').off('click');
                                                $('#myEditModalContent #bookAppointment').on('click', function (e) {
                                                    e.preventDefault();
                                                    const $form = $('#myEditModalContent #bookAppointmentForm');
                                                    $.validator.unobtrusive.parse($form);
                                                    $form.validate();
                                                    if ($form.valid()) {
                                                        let model = new Object();
                                                        model.Id = $('#myEditModalContent #Id').val();
                                                        model.DoctorId = $('#myEditModalContent #DoctorId').val();
                                                        model.InsuredId = $('#myEditModalContent #InsuredId').val();
                                                        model.AppointmentDate = $('#myEditModalContent #AppointmentDate').val();
                                                        model.AppointmentStartTime = $('#myEditModalContent #AppointmentStartTime').val();
                                                        model.InsuredComments = $('#myEditModalContent #InsuredComments').val();
                                                        model.InsuredAppointmentCharge = $('#myEditModalContent #InsuredAppointmentCharge').val();
                                                        model = JSON.stringify(model)
                                                        $.ajax({
                                                            contentType: 'application/json',
                                                            type: 'put',
                                                            url: '/api/BookAppointment',
                                                            data: model,
                                                            cache: false,
                                                            processData: false,
                                                            success: function (response) {
                                                                $('#myEditModalContent #bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                                                                $('#myEditModalContent #InsuredComments').val('');
                                                                $('#edit-modal').modal('hide');
                                                                ListAppointments('', '', -1, '0001-01-01', '@CurrentUserId');
                                                            },
                                                            error: function (error) {
                                                                const errorObject = error.responseJSON.ModelState;
                                                                $('#myEditModalContent #bookAppointmentForm div.validation-summary-errors > ul').children().remove();
                                                                for (var property in errorObject) {
                                                                    if (errorObject.hasOwnProperty(property)) {
                                                                        if (property == '') {
                                                                            $('#myEditModalContent #bookAppointmentForm div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                                                        }
                                                                    }
                                                                }
                                                                const $form = $('#myEditModalContent #bookAppointmentForm');
                                                                $.validator.unobtrusive.parse($form);
                                                                $form.validate();
                                                                if (!$form.valid()) {
                                                                    $.each($form.validate().errorList, function (key, value) {
                                                                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                                                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                                                        $errorSpan.show();
                                                                    });
                                                                }
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        console.log($form.validate().errorList);
                                                        $.each($form.validate().errorList, function (key, value) {
                                                            console.log(value);
                                                            const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                                            $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                                            $errorSpan.show();
                                                        });
                                                    }
                                                })
                                                const appointmentDate = $('#myEditModalContent #AppointmentDate').val();
                                                const currentSlot = $(e.target).parent().prev().prev().text();
                                                const currentDate = $(e.target).parent().prev().prev().prev().text(); 
                                                listAvailableAppointments(currentSlot, currentDate, appointmentDate, doctor.UserId);
                                            },
                                            error: function () {
                                                $('#myEditModalContent #normalContainerBook').hide();
                                                $('#myEditModalContent #errorContainerBook').show();                                                
                                                $('#edit-modal').modal('show');
                                            }
                                        })
                                    },
                                    error: function () {
                                        alert("Dynamic content load failed.");
                                    }
                                });
                            })
                            $('.cancel-appointment').click(function (e) {
                                let id = $(e.target).data('id');
                                $.ajax({
                                    type: "GET",
                                    url: '/Appointments/CancelAppointmentDetails',
                                    contentType: "application/json; charset=utf-8",
                                    data: { "appointmentId": id },
                                    datatype: "json",
                                    success: function (data) {
                                        $('#myModalContent').html(data);
                                        $('#confirm-cancel-modal').modal('show');
                                        $('.btn-ok').attr('data-id', id);
                                        $('.btn-ok').click(function (e) {
                                            console.log('YES clicked')
                                            let id = $(e.target).data('id');
                                            console.log(id)
                                            $.ajax({
                                                url: '/Appointments/CancelAppointment',
                                                @*url: '@Url.Action("CancelAppointment", "Appointments")',*@
                                                type: 'post',
                                                data: {
                                                    appointmentId: id
                                                },
                                                success: function (result) {
                                                    $('#confirm-cancel-modal').modal('hide');
                                                    ListAppointments('', '', -1, '0001-01-01', '@CurrentUserId');
                                                },
                                                error: function () {
                                                    alert("error");
                                                }
                                            });
                                        });
                                    },
                                    error: function () {
                                        alert("Dynamic content load failed.");
                                    }
                                });
                            });
                            
                        },
                        error: function (error) {
                            console.log(error);
                            $('#appointmentsList').empty();
                            $("#appointmentsList").append('<tr><td colspan="7"> Something went wrong. Please try again later. </td></tr>')
                            fixFooterPosition(0);
                        }
                    })
            }

            console.log('@CurrentUserId');

            ListAppointments('', '', -1, '0001-01-01', '@CurrentUserId');

            $('#search').on('submit', function (e) {
                e.preventDefault();
                if (isUserInsured) {
                    ListAppointments(e.target[0].value, e.target[1].value, e.target[2].value, e.target[3].value, '@CurrentUserId');
                }
                if (isUserDoctor) {
                    ListAppointments(e.target[0].value, e.target[1].value, -1, e.target[2].value, '@CurrentUserId');
                }
            })       
            $('#search').on('submit', function (e) {
                e.preventDefault();
                if (e.target[3].type == 'date') {
                    ListDoctors(e.target[0].value, e.target[1].value, e.target[2].value, e.target[3].value);
                }
                else {
                    ListDoctors(e.target[0].value, e.target[1].value, e.target[2].value, '0001-01-01');
                }
            })
            $('#edit-modal').on('hidden.bs.modal', function () {
                $('#myEditModalContent #NoAvailableAppointments').hide();
                $('#myEditModalContent #NoWorkingDay').hide();
                $('#myEditModalContent #InsuredComments').val('');
                $('#myEditModalContent #bookAppointmentForm div.validation-summary-errors > ul').children().remove();
            })
        })
    </script>
}