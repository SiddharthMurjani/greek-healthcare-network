@using GreekHealthcareNetwork.Models
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Home Page";
    int number;
    string userId = User.Identity.GetUserId();
    using (var db = new ApplicationDbContext())
    {
        number = db.Messages.Count(m => m.RecipientId.Equals(userId) && m.MessageStatus == MessageStatus.Unread && m.Subject.Contains("Cancellation"));
    }
}
@Html.Partial("_IndexPartial")

<div class="modal fade" id="AppointmentsCancellationInformModal" tabindex="-1" role="dialog" aria-labelledby="AppointmentsCancellationInformModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="AppointmentsCancellationInformModalLabel">Appointment Cancellation Notice</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <h5 id="information"></h5>
                    <h5>Be sure to check your inbox about it!</h5>
                </div>
            </div>
        </div>
    </div>
</div>

@section cssScripts {
    @if (!Request.IsAuthenticated)
    {
        <link href="~/Content/mdb.css" rel="stylesheet" />
    }
}

@section scripts {
    @if (!Request.IsAuthenticated)
    {
        <script src="~/Scripts/mdbScripts/LRModal.js"></script>
    }
    @if (User.IsInRole("Doctor"))
    {
        <script>
            $(document).ready(function () {
                $('#headerDoctor').addClass('header-top');
                $(window).scroll(function () {
                    if ($(this).scrollTop() > 100) {
                        $('.back-to-top').fadeIn('slow');
                        $('#headerDoctor').removeClass('header-top')
                        $('#headerDoctor').addClass('header-fixed');
                    } else {
                        $('.back-to-top').fadeOut('slow');
                        $('#headerDoctor').removeClass('header-fixed');
                        $('#headerDoctor').addClass('header-top');
                    }
                })
            })
        </script>
    }
    @if (User.IsInRole("Insured"))
    {
        <script>
            $(document).ready(function () {
                $('#headerInsured').addClass('header-top');
                $(window).scroll(function () {
                    if ($(this).scrollTop() > 100) {
                        $('.back-to-top').fadeIn('slow');
                        $('#headerInsured').removeClass('header-top')
                        $('#headerInsured').addClass('header-fixed');
                    } else {
                        $('.back-to-top').fadeOut('slow');
                        $('#headerInsured').removeClass('header-fixed');
                        $('#headerInsured').addClass('header-top');
                    }
                })
            })
        </script>
    }
    @if (User.IsInRole("Doctor") || User.IsInRole("Insured"))
    {
        <script>
            $(document).ready(function () {
                if (@(number) > 0) {
                    $('#AppointmentsCancellationInformModal #information').text('You have ' + @(number) + ' unread messages regarding cancellation of appointment with a doctor!');
                    $('#AppointmentsCancellationInformModal').modal('show');
                }
            })
        </script>
    }
    @if (User.IsInRole("Administrator"))
    {
        <script>
            $(document).ready(function () {
                $('#headerAdmin').addClass('header-top');
                $(window).scroll(function () {
                    if ($(this).scrollTop() > 100) {
                        $('.back-to-top').fadeIn('slow');
                        $('#headerAdmin').removeClass('header-top')
                        $('#headerAdmin').addClass('header-fixed');
                    } else {
                        $('.back-to-top').fadeOut('slow');
                        $('#headerAdmin').removeClass('header-fixed');
                        $('#headerAdmin').addClass('header-top');
                    }
                })
            })
        </script>
    }
    <script>
        $(document).ready(function () {
            $('#sendContactForm').click(function (e) {
                if ($('#sendContactForm').hasClass("noClick")) {
                    e.preventDefault();
                }
                else {
                    e.preventDefault();
                    $('#sendContactForm').addClass("noClick");
                    const $form = $('#contact form');
                    $.validator.unobtrusive.parse($form);
                    $form.validate();
                    if ($form.valid()) {
                        $.ajax({
                            type: 'get',
                            dataType: 'json',
                            url: '/Admin/AdminWithLessVisitorMessagesUnreplied',
                            success: function (data) {
                                let model = new Object();
                                model.VisitorMessage = new Object();
                                model.VisitorMessage.SenderId = $('#VisitorMessage_SenderId').val();
                                model.VisitorMessage.RecipientId = data.adminId;
                                model.VisitorMessage.FirstName = $('#VisitorMessage_FirstName').val();
                                model.VisitorMessage.LastName = $('#VisitorMessage_LastName').val();
                                model.VisitorMessage.Email = $('#VisitorMessage_Email').val();
                                model.VisitorMessage.Subject = $('#VisitorMessage_Subject').val();
                                model.VisitorMessage.MessageText = $('#VisitorMessage_MessageText').val();
                                model.FirstName = "";
                                model.LastName = "";
                                model.InsuredPlans = [];
                                model.DoctorSpecialty = -1;
                                model.MedicalSpecialties = [];
                                model.AppointmentDate = null;
                                model.UserName = "testUserName"
                                model.Password = "testPassword"
                                model.RememberMe = false;
                                model.Message = null;
                                model = JSON.stringify(model)
                                $.ajax({
                                    contentType: 'application/json',
                                    type: 'post',
                                    url: '/api/Messages',
                                    data: model,
                                    cache: false,
                                    processData: false,
                                    success: function () {
                                        $('#errorContainerMessage').hide();
                                        $('#VisitorMessage_FirstName').val("");
                                        $('#VisitorMessage_LastName').val("");
                                        $('#VisitorMessage_Email').val("");
                                        $('#VisitorMessage_Subject').val("");
                                        $('#VisitorMessage_MessageText').val("");
                                        $('#VisitorMessageSent').modal('show');
                                        setTimeout(function () {
                                            $('#VisitorMessageSent').modal("hide");
                                        }, 3000)
                                    },
                                    error: function (error) {
                                        $('#errorContainerMessage').show();
                                        const errorObject = error.responseJSON.ModelState;
                                        $('#contact div.validation-summary-errors > ul').children().remove();
                                        for (var property in errorObject) {
                                            if (errorObject.hasOwnProperty(property)) {
                                                if (property == '') {
                                                    $('#contact div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                                }
                                            }
                                        }
                                        const $form = $('#contact form');
                                        $.validator.unobtrusive.parse($form);
                                        $form.validate();
                                        if (!$form.valid()) {
                                            $.each($form.validate().errorList, function (key, value) {
                                                const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                                $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                                $errorSpan.show();
                                            });
                                        }
                                    }
                                });
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        })                        
                    }
                    else {
                        $('#errorContainerMessage').show();
                        console.log($form.validate().errorList);
                        $.each($form.validate().errorList, function (key, value) {
                            console.log(value);
                            const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                            $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                            $errorSpan.show();
                        });
                    }
                    setTimeout(function() {
                        $('#sendContactForm').removeClass("noClick");
                    }, 4000);
                }
            })
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}