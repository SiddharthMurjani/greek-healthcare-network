@model GreekHealthcareNetwork.Models.SearchLoginViewModel
@using GreekHealthcareNetwork.Repositories;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Messages";
    var CurrentUserId = User.Identity.GetUserId();
    var Users = new UsersRepository();    
}

@section cssScripts{
    <link href="@Url.Content("~/Content/messages.css")" type="text/css" rel="stylesheet" />
}

<main id="main">
    <div id="mainDiv1" class="col-8 mt-5">
        <div class="page-header d-flex justify-content-between align-items-center">
            <h1>
                Messages
            </h1>
            @if (User.IsInRole("Doctor") || User.IsInRole("Insured"))
            {
                <button id="contactAdmin" class="btn btn-secondary">Contact Support</button>
            }
        </div>
        <div>
            <table class="table mt-4">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">From</th>
                        <th scope="col">To</th>
                        <th scope="col">Status</th>
                        <th scope="col">Date</th>
                        <th scope="col">Time</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody id="messageList">
                </tbody>
            </table>
        </div>
    </div>
</main>

<div class="modal fade" id="viewMessage" tabindex="-1" role="dialog" aria-labelledby="viewMessageLabel" aria-hidden="true">

    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div id="errorContainerMessage" class="container">
                <div class="modal-body">
                    <p class="text-danger ml-3 mb-2"> Something went wrong. Please try again. </p>
                </div>
            </div>
            <div id="successContainerMessage" class="container">
                <div class="modal-header">
                    <h3 class="mb-1" id="messageFor"></h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h5 id="subject"></h5>
                    <h5 class="mb-1"><b>Message:</b></h5>
                    <pre class="mb-3" id="messagetext"></pre>
                    <hr />
                    <div class="form-group">
                        <div id="errorContainerSentMessage" class="container">
                            <div class="form-horizontal">
                                <p class="text-danger ml-3 mb-2"> Your message hasn't been sent. Please try again. </p>
                            </div>
                        </div>
                        <div id="successContainerSentMessage" class="container">
                            <div class="form-horizontal">
                                <p class="text-success ml-3 mb-2"> Your message has been sent. </p>
                            </div>
                        </div>
                        <div id="normalContainerSentMessage" class="container">
                            <form id="sentmessagearea" class="form-horizontal">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <input value="@User.Identity.Name" class="input-validation-error" data-val="true" data-val-required="Username/Email field is Required." id="UserName1" name="UserName" type="hidden"><!--Unused, here just to supress validation error messages-->
                                </div>
                                <div class="form-group">
                                    <input value="!Doctor123" class="input-validation-error" data-val="true" data-val-required="Password is Reguired." id="Password1" name="Password" type="hidden"><!--Unused, here just to supress validation error messages-->
                                </div>
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.Message.SenderId, new { @Value = CurrentUserId })
                                </div>
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.Message.RecipientId)
                                </div>
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.Message.ConversationId)
                                </div>
                                <div class="form-group">
                                    <div class="col-md-10">
                                        @Html.HiddenFor(m => m.Message.Subject)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Message.MessageText, new { @class = "col-md-12 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(m => m.Message.MessageText, new { @class = "form-control", style = "min-width: 100%" })
                                        @Html.ValidationMessageFor(m => m.Message.MessageText, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" class="btn btn-outline-dark" id="reply" value="Reply" />
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_NewMessage")


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            function listMessages(UserId) {
                $.ajax({
                    dataType: 'json',
                    type: 'get',
                    url: '/api/Messages?&UserId=' + UserId,
                    success: function (data) {
                         $('#messageList').empty();
                        if (data.length == 0) {
                            $("#messageList").append('<tr><td colspan="7">You have no messages yet.</td></tr>');
                        }
                        else {
                            data.forEach(function (message) {
                                    const tr = $(document.createElement('tr'));
                                    const userImage = $(document.createElement('td'));
                                    const image = $(document.createElement('img'));
                                    $(tr).attr('id', message.Id);
                                    @{
                                        string insuredRoleId = Users.GetRoleIdByName("Insured");
                                        string doctorRoleId = Users.GetRoleIdByName("Doctor");
                                        string adminRoleId = Users.GetRoleIdByName("Administrator");

                                    }
                                    if (message.Sender.Roles[0].RoleId == '@insuredRoleId') {
                                        $(image).attr('src', '@Url.Content("~/Content/img/Insureds/")' + message.Sender.Id + '/' + message.Sender.ProfilePicture);
                                    }
                                    else if (message.Sender.Roles[0].RoleId == '@doctorRoleId') {
                                        $(image).attr('src', '@Url.Content("~/Content/img/Doctors/")' + message.Sender.Id + '/' + message.Sender.ProfilePicture);
                                    }
                                    else {
                                        $(image).attr('src', '@Url.Content("~/Content/img/Admins/")' + message.Sender.Id + '/' + message.Sender.ProfilePicture);
                                    }
                                    $(image).attr('class', 'rounded-circle')
                                    $(userImage).append(image);
                                    $(tr).append(userImage);
                                    const from = $(document.createElement('td'));
                                    $(from).text(message.Sender.FirstName + ' ' + message.Sender.LastName);
                                    $(tr).append(from);
                                    const to = $(document.createElement('td'));
                                    $(to).text(message.Recipient.FirstName + ' ' + message.Recipient.LastName);
                                    const status = $(document.createElement('td'));
                                    $(tr).append(to);

                                    if (message.Sender.Id == UserId) {
                                        $(status).text('Sent');
                                    }
                                    else {
                                        $(status).text('Received');
                                        if (message.MessageStatus == "Unread") {
                                            $(tr).attr('class', 'font-weight-bold')

                                        }
                                        else if (message.MessageStatus == "Replied") {
                                            $(tr).attr('class', 'text-success font-italic')
                                        }
                                    }
                                    $(tr).append(status);
                                    const date = $(document.createElement('td'));
                                    const datePart = message.SentDate.split('T')[0];
                                    const datePartSplitted = datePart.split('-');
                                    $(date).text(datePartSplitted[2] + '-' + datePartSplitted[1] + '-' +datePartSplitted[0]);
                                    $(tr).append(date);
                                    const time = $(document.createElement('td'));
                                    $(time).text(message.SentTime.split(':')[0] + ':' + message.SentTime.split(':')[1]);
                                    $(tr).append(time);
                                    const action = $(document.createElement('td'));
                                    const view = $(document.createElement('button'));
                                    $(view).text('View');
                                    $(view).addClass('btn btn-success viewBtn');
                                    $(view).attr('data-id', message.Id);


                                    $(action).append(view);

                                    $(tr).append(action);
                                    $('#messageList').append(tr);
                            });
                            $('.viewBtn').click(function (e) {
                                let id = $(e.target).data('id');
                                $.ajax({
                                    dataType: 'json',
                                    type: 'get',
                                    url: '/api/Messages?&id=' + id,
                                    success: function (message) {
                                        if (message.MessageStatus == "Unread") {
                                            const count = $('#unreadMessagesCount').text();
                                            const substring = count.substring(1, count.length - 1);
                                            const num = parseInt(substring);
                                            if (num == 1) {
                                                $('#unreadMessagesCount').text('');
                                            }
                                            else {                                                
                                                $('#unreadMessagesCount').text('(' + (num - 1) + ')');
                                            }
                                        }
                                        $('#viewMessage #errorContainerMessage').hide();
                                        $('#viewMessage #successContainerMessage').show();
                                        $('#viewMessage #successContainerSentMessage').hide();
                                        $('#viewMessage #errorContainerSentMessage').hide();
                                        $('#viewMessage #normalContainerSentMessage').show();
                                        $('#viewMessage #Message_ConversationId').val(message.ConversationId);
                                        $('#viewMessage #Message_Subject').val(message.Subject);
                                        $('#viewMessage #reply').attr('data-id', message.Id);
                                        $(e.target).parent().parent().removeClass('font-weight-bold');
                                        let model = message;
                                        model.MessageStatus = 'Read';
                                        model = JSON.stringify(model);
                                        $.ajax({
                                            contentType: 'application/json',
                                            type: 'put',
                                            data: model,
                                            url: '/api/Messages',
                                            success: function () {
                                                console.log('success')
                                            },
                                            error: function () {
                                                console.log('error')
                                            }
                                        })
                                        let elem = $('#viewMessage #messageFor');
                                        if (message.SenderId == "@CurrentUserId") {
                                            $('#viewMessage #Message_SenderId').val(message.SenderId);
                                            $('#viewMessage #Message_RecipientId').val(message.RecipientId);
                                            $(elem).html('<b>Message to:</b> ' + message.Recipient.FirstName + ' ' + message.Recipient.LastName)
                                        }
                                        else {
                                            $('#viewMessage #Message_SenderId').val(message.RecipientId);
                                            $('#viewMessage #Message_RecipientId').val(message.SenderId);
                                            $(elem).html('<b>Message from:</b> ' + message.Sender.FirstName + ' ' + message.Sender.LastName)
                                        }
                                        $('#viewMessage #subject').html('<b>Subject:</b> ' + message.Subject);
                                        $('#viewMessage #messagetext').text(message.MessageText);
                                        $('#viewMessage').modal('show');
                                    },
                                    error: function (error) {
                                        $('#viewMessage #errorContainerMessage').show();
                                        $('#viewMessage #successContainerMessage').hide();
                                    }
                                })
                            });
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        $('#messageList').empty();
                        $('#messageList').append('<tr><td colspan="7"> Something went wrong. Please try again later. </td></tr>')
                        fixFooterPosition(0);
                    }

                })
            }
            @if(User.IsInRole("Administrator"))
            {
                @:$('#mainDiv1').addClass('offset-left-messages');
            }
            else
            {
                @:$('#mainDiv1').addClass('offset-2');
            }
            $('#reply').click(function (e) {
                e.preventDefault();
                const $form = $('#sentmessagearea');
                $.validator.unobtrusive.parse($form);
                $form.validate();
                if ($form.valid()) {
                    let model = new Object();
                    model.Message = new Object();
                    model.Message.ConversationId = $('#sentmessagearea #Message_ConversationId').val();
                    model.Message.SenderId = $('#sentmessagearea #Message_SenderId').val();
                    model.Message.RecipientId = $('#sentmessagearea #Message_RecipientId').val();
                    model.Message.Subject = $('#sentmessagearea #Message_Subject').val();
                    model.Message.MessageText = $('#sentmessagearea #Message_MessageText').val();
                    model.FirstName = "";
                    model.LastName = "";
                    model.InsuredPlans = [];
                    model.DoctorSpecialty = -1;
                    model.MedicalSpecialties = [];
                    model.AppointmentDate = null;
                    model.UserName = $('#sentmessagearea #UserName1').val();
                    model.Password = $('#sentmessagearea #Password1').val();
                    model.RememberMe = false;
                    model.VisitorMessage = null;
                    model = JSON.stringify(model)
                    $.ajax({
                    contentType: 'application/json',
                        type: 'post',
                        url: '/api/Messages',
                        data: model,
                        cache: false,
                        processData: false,
                        success: function () {
                            let id = $('#reply').data('id');
                            $.ajax({
                            dataType: 'json',
                                type: 'get',
                                url: '/api/Messages?&id=' + id,
                                success: function (message) {
                                    const tr = $('#' + message.Id);
                                    if (message.SenderId != "@CurrentUserId") {
                                        $(tr).addClass('text-success');
                                        $(tr).addClass('font-italic');
                                        $(tr).removeClass('font-weight-bold');
                                    }
                                    let m = message;
                                    m.MessageStatus = 'Replied';
                                    m = JSON.stringify(m);
                                    $.ajax({
                                    contentType: 'application/json',
                                        type: 'put',
                                        data: m,
                                        url: '/api/Messages',
                                        success: function () {
                                            console.log('success')
                                        },
                                        error: function () {
                                            console.log('error')
                                        }
                                    })
                                },
                                error: function (error) {
                                    console.log(error)
                                }

                            });
                            $('#sentmessagearea #Message_MessageText').val("");
                            $('#viewMessage #normalContainerSentMessage').hide();
                            $('#viewMessage #errorContainerSentMessage').hide();
                            $('#viewMessage #successContainerSentMessage').show();
                            setTimeout(function () {
                                $('#viewMessage').modal("hide");
                            }, 3000)
                        },
                        error: function (error) {
                            $('#viewMessage #errorContainerSentMessage').show();
                            const errorObject = error.responseJSON.ModelState;
                            $('#sentmessagearea div.validation-summary-errors > ul').children().remove();
                            for (var property in errorObject) {
                                if (errorObject.hasOwnProperty(property)) {
                                    if (property == '') {
                                        $('#sentmessagearea div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                    }
                                }
                            }
                            const $form = $('#sentmessagearea');
                            $.validator.unobtrusive.parse($form);
                            $form.validate();
                            if (!$form.valid()) {
                                $.each($form.validate().errorList, function (key, value) {
                                    const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                    $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                    $errorSpan.show();
                                });
                            }
                        }
                    });
                }
                else {
                    $('#viewMessage #errorContainerSentMessage').show();
                    console.log($form.validate().errorList);
                    $.each($form.validate().errorList, function (key, value) {
                        console.log(value);
                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                        $errorSpan.show();
                    });
                }
            })
            $('#contactAdmin').click(function () {
                $.ajax({
                    type: 'get',
                    dataType: 'json',
                    url: '/Admin/AdminWithLessNonVisitorMessagesUnreplied',
                    success: function (data) {
                        console.log('in');
                        $('#newMessage #errorContainerMessage').hide();
                        $('#newMessage #successContainerMessage').hide();
                        $('#messagearea #Message_RecipientId').val(data.adminId);
                        $('#newMessage #normalContainerMessage').show();
                        $('#newMessage').modal('show');
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            })
            $('#viewMessage').on('hidden.bs.modal', function () {
                $('#sentmessagearea').trigger('reset');
                $('#sentmessagearea div.validation-summary-valid').addClass('validation-summary-errors').removeClass('validation-summary-valid');
                $('#sentmessagearea span[data-valmsg-for="Message.MessageText"]').children().remove();
                $('#sentmessagearea div.validation-summary-errors > ul').children().remove();
            })
            $('#newMessage').on('hidden.bs.modal', function () {
                $('#messagearea').trigger('reset');
                $('#messagearea div.validation-summary-valid').addClass('validation-summary-errors').removeClass('validation-summary-valid');
                $('#messagearea span[data-valmsg-for="Message.Subject"]').children().remove();
                $('#messagearea span[data-valmsg-for="Message.MessageText"]').children().remove();
                $('#messagearea div.validation-summary-errors > ul').children().remove();
            })
            $('#messagearea #send').click(function (e) {
                if ($('#messagearea #send').hasClass("noClick")) {
                    e.preventDefault();
                }
                else {
                    $('#messagearea #send').addClass("noClick");
                    const $form = $('#messagearea');
                    $.validator.unobtrusive.parse($form);
                    $form.validate();
                    if ($form.valid()) {
                        let model = new Object();
                        model.Message = new Object();
                        model.Message.ConversationId = 0;
                        model.Message.SenderId = $('#messagearea #Message_SenderId').val();
                        model.Message.RecipientId = $('#messagearea #Message_RecipientId').val();
                        model.Message.Subject = $('#messagearea #Message_Subject').val();
                        model.Message.MessageText = $('#messagearea #Message_MessageText').val();
                        model.FirstName = "";
                        model.LastName = "";
                        model.InsuredPlans = [];
                        model.DoctorSpecialty = -1;
                        model.MedicalSpecialties = [];
                        model.AppointmentDate = null;
                        model.UserName = $('#messagearea #UserName1').val();
                        model.Password = $('#messagearea #Password1').val();
                        model.RememberMe = false;
                        model.VisitorMessage = null;
                        model = JSON.stringify(model)
                        $.ajax({
                            contentType: 'application/json',
                            type: 'post',
                            url: '/api/Messages',
                            data: model,
                            cache: false,
                            processData: false,
                            success: function () {
                                $('#messagearea #Message_Subject').val("");
                                $('#messagearea #Message_MessageText').val("");
                                $('#newMessage #normalContainerMessage').hide();
                                $('#newMessage #errorContainerMessage').hide();
                                $('#newMessage #successContainerMessage').show();
                                setTimeout(function () {
                                    $('#newMessage').modal("hide");
                                }, 3000)
                            },
                            error: function (error) {
                                $('#newMessage #errorContainerMessage').show();
                                const errorObject = error.responseJSON.ModelState;
                                $('#messagearea div.validation-summary-errors > ul').children().remove();
                                for (var property in errorObject) {
                                    if (errorObject.hasOwnProperty(property)) {
                                        if (property == '') {
                                            $('#messagearea div.validation-summary-errors > ul').append('<li>' + errorObject[property] + '</li>')
                                        }
                                    }
                                }
                                const $form = $('#messagearea');
                                $.validator.unobtrusive.parse($form);
                                $form.validate();
                                if (!$form.valid()) {
                                    $.each($form.validate().errorList, function (key, value) {
                                        const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                                        $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                                        $errorSpan.show();
                                    });
                                }
                            }
                        });
                    }
                    else {
                        $('#newMessage #errorContainerMessage').show();
                        console.log($form.validate().errorList);
                        $.each($form.validate().errorList, function (key, value) {
                            console.log(value);
                            const $errorSpan = $("span[data-valmsg-for='" + value.element.id + "']");
                            $errorSpan.html("<span style='color:red'>" + value.message + "</span>");
                            $errorSpan.show();
                        });
                    }
                    setTimeout(function() {
                        $('#newMessage #send').removeClass("noClick");
                    }, 4000);
                }
            })
            listMessages('@CurrentUserId');
        })

</script>

}

