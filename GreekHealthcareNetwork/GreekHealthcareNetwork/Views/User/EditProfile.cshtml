@model GreekHealthcareNetwork.Models.ProfileDetailsViewModel
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Edit Profile";
}

@section cssScripts{
    <link href="@Url.Content("~/Content/TestPlaton.css")" type="text/css" rel="stylesheet" />
}

@using (Html.BeginForm("EditProfile", "User", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <main id="main">
        <div>
            <div class="col-md-5 offset-md-4">
                <div class="page-header">
                    <h1>Profile</h1>
                </div>
                <div class="row" id="profileSection">
                    <div class="col-md-4">
                        <div class="changeProfPicContainer">
                            @if (User.IsInRole("Doctor"))
                            {
                                <img src="@Url.Content("~/Content/img/Doctors/" + @User.Identity.GetUserId() + "/")@Model.User.ProfilePicture" class="rounded-circle w-100 h-100" alt="">
                            }
                            @if (User.IsInRole("Insured"))
                            {
                                <img src="@Url.Content("~/Content/img/Insureds/" + @User.Identity.GetUserId() + "/")@Model.User.ProfilePicture" class="rounded-circle w-100 h-100" alt="">
                            }
                            @Html.TextBoxFor(m => m.ProfilePicture, new { @class = "form-control", type = "file", accept = "image/*" })
                        </div>
                    </div>
                    <div class="col-md-8 align-self-center">
                        <h4>
                            @if (User.IsInRole("Doctor"))
                            {
                                <text>Doctor</text>
                            }
                            @if (User.IsInRole("Insured"))
                            {
                                @Model.Insured.InsuredPlan.Name <text> Member</text>
                            }
                        </h4>
                        <p>Exp: @Model.User.SubscriptionEndDate.ToString("dd/MM/yyyy")</p>
                        <button type="button" class="btn btn-info">Renew</button>
                    </div>
                </div>
                <div>
                    <table class="table table-borderless mt-5">
                        <tbody>
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.FirstName):</th>
                                <td>@Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.FirstName, "", new { @class = "text-danger" })</td>
                            </tr>
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.LastName):</th>
                                <td>@Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.LastName, "", new { @class = "text-danger" })</td>
                            </tr>
                            @if (User.IsInRole("Doctor"))
                            {
                                <tr class="form-group">
                                    <th>@Html.LabelFor(m => m.Doctor.MedicalSpecialty):</th>
                                    <td>@Html.TextBoxFor(m => m.Doctor.MedicalSpecialty, new { @class = "form-control", @readonly = "readonly" })</td>
                                    <td>@Html.ValidationMessageFor(m => m.Doctor.MedicalSpecialty, "", new { @class = "text-danger" })</td>
                                </tr>
                            }
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.DoB):</th>
                                <td>@Html.TextBoxFor(m => m.User.DoB, new { @class = "form-control", type = "date", @Value = Model.User.DoB.ToString("yyyy-MM-dd") })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.DoB, "", new { @class = "text-danger" })</td>
                            </tr>
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.AMKA):</th>
                                <td>@Html.TextBoxFor(m => m.User.AMKA, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.AMKA, "", new { @class = "text-danger" }) </td>
                            </tr>
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.PaypalAccount):</th>
                                <td>@Html.TextBoxFor(m => m.User.PaypalAccount, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.PaypalAccount, "", new { @class = "text-danger" })</td>
                            </tr>
                            @if (User.IsInRole("Doctor"))
                            {
                                if (Model.Doctor.WorkingHours.Count == 0)
                                {
                                    <tr>
                                        <th>@Html.LabelFor(m => m.Doctor.WorkingHours):</th>
                                        <td>Doctor has not declared any working hours yet.</td>
                                    </tr>
                                }
                                else
                                {
                                    for (int i = 0; i < Model.Doctor.WorkingHours.Count; i++)
                                    {
                                        <tr>
                                            @if (i == 0)
                                            {
                                                <th>@Html.LabelFor(m => m.Doctor.WorkingHours):</th>
                                            }
                                            else
                                            {
                                                <th></th>
                                            }
                                            <td>@Html.TextBoxFor(m => m.Doctor.WorkingHours.ToList()[i].WorkingDayConcat, new { @class = "form-control", @readonly = "readonly" })</td>
                                        </tr>
                                    }
                                }
                            }
                            <tr class="form-group">
                                @if (User.IsInRole("Doctor"))
                                {
                                    <th>@Html.LabelFor(m => m.Doctor.OfficeAddress):</th>
                                    <td>@Html.TextBoxFor(m => m.Doctor.OfficeAddress, new { @class = "form-control" })</td>
                                    <td>@Html.ValidationMessageFor(m => m.Doctor.OfficeAddress, "", new { @class = "text-danger" })</td>
                                }
                                @if (User.IsInRole("Insured"))
                                {
                                    <th>@Html.LabelFor(m => m.Insured.HomeAddress)</th>
                                    <td>@Html.TextBoxFor(m => m.Insured.HomeAddress, new { @class = "form-control" })</td>
                                    <td>@Html.ValidationMessageFor(m => m.Insured.HomeAddress, "", new { @class = "text-danger" })</td>
                                }
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.Email):</th>
                                <td>@Html.TextBoxFor(m => m.User.Email, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.Email, "", new { @class = "text-danger" })</td>
                            </tr>
                            <tr class="form-group">
                                <th>@Html.LabelFor(m => m.User.PhoneNumber):</th>
                                <td>@Html.TextBoxFor(m => m.User.PhoneNumber, new { @class = "form-control" })</td>
                                <td>@Html.ValidationMessageFor(m => m.User.PhoneNumber, "", new { @class = "text-danger" })</td>
                            </tr>
                            <tr class="form-group">
                                <td></td>
                                <td><input type="submit" class="btn btn-danger" value="Update" /></td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </main>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}