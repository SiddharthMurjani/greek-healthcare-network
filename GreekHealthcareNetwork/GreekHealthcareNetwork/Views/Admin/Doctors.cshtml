@{
    ViewBag.Title = "Doctors";
}
@section cssScripts{
    <link href="@Url.Content("~/Content/TestPlaton.css")" type="text/css" rel="stylesheet" />
    <style> 
        body {
            width: 170vw;   
        }    
    </style>
}

<main id="main" class="offset-left mt-5">
    <div class="page-header">
        <h1>
            Doctors
        </h1>
    </div>
    <div class="">
        <table class="table mt-4" id="doctorsList">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Specialty</th>
                    <th scope="col">Address</th>
                    <th scope="col">AMKA</th>
                    <th scope="col">Telephone</th>
                    <th scope="col">Paypal Account</th>
                    <th scope="col">Payment Pending</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</main>

<div class="modal fade" id="paymentResultModal" tabindex="-1" role="dialog" aria-labelledby="paymentResultModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title" id="paymentResultModalLabel">Result</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="resultMessage"></p>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>


    $(document).ready(function () {
        ListDoctors('', '', -1);
        function ListDoctors(firstName, lastName, specialty) {
            $.ajax({
                dataType: 'json',
                type: 'get',
                url: '/api/Search/AdminSearchDoctorResults?doctorsFirstName=' + firstName + '&doctorsLastName=' + lastName + '&doctorsSpecialty=' + specialty,
                success: function (data) {
                    $('#doctorsList tbody').empty();
                    var counter = 0;
                    data.doctors.forEach(function (doctor) {
                        $('#doctorsList tbody').append(
                              '<tr><td><img src="@Url.Content("~/Content/img/Doctors/")' + doctor.User.Id + '/' + doctor.User.ProfilePicture + '" alt="' + doctor.User.ProfilePicture + '"' + 'class="rounded-circle">'
                            + '</td><td>' + doctor.User.FirstName
                            + '</td><td>' + doctor.User.LastName
                            + '</td><td>' + doctor.MedicalSpecialty
                            + '</td><td>' + doctor.OfficeAddress
                            + '</td><td>' + doctor.User.AMKA
                            + '</td><td>' + doctor.User.PhoneNumber
                            + '</td><td>' + doctor.User.PaypalAccount
                            + '</td><td>' + parseFloat(data.doctorsPayments[counter]).toFixed(2) + ' &euro;'
                            + '</td>'                           
                            + '<td><button class="btn btn-success table-button editBtn" data-id="' + doctor.UserId + '" >Edit</button>'
                            + ((doctor.User.IsActive == true) ? '<button class="btn btn-danger table-button setActiveBtn" data-is-active="true" data-id="' + doctor.UserId + '">Deactivate</button>' : '<button class="btn btn-danger table-button setActiveBtn" data-is-active="false" style="width:101.2px; height:38px" data-id="' + doctor.UserId + '">Activate</button>')
                            + '<button class="btn btn-primary table-button sentMessageBtn" data-id="' + doctor.UserId + '" >Message</button>'
                            + (data.doctorsPayments[counter] == 0 ? '<button class="btn btn-secondary table-button disabled" data-id="' + doctor.UserId + '">Pay</button></td>' : '<button class="btn btn-secondary table-button payBtn" data-id="' + doctor.UserId + '">Pay</button></td>')
                            + '</tr>')
                        counter++;
                    });
                    $('.editBtn').on('click', function (e) {
                        var grandParent = $(this).parent().parent();
                        grandParent.append('<form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>');
                        var firstName = grandParent.children('td:nth-child(2)').html();
                        grandParent.children('td:nth-child(2)').html("");
                        grandParent.children('td:nth-child(2)').append('<input type="text" class="form-control col-10" value="' + firstName + '">');
                        var lastName = grandParent.children('td:nth-child(3)').html();
                        grandParent.children('td:nth-child(3)').html("");
                        grandParent.children('td:nth-child(3)').append('<input type="text" class="form-control col-10" value="' + lastName + '">');
                        var address = grandParent.children('td:nth-child(5)').html();
                        grandParent.children('td:nth-child(5)').html("");
                        grandParent.children('td:nth-child(5)').append('<input type="text" class="form-control col-10" value="' + address + '">');
                        var amka = grandParent.children('td:nth-child(6)').html();
                        grandParent.children('td:nth-child(6)').html("");
                        grandParent.children('td:nth-child(6)').append('<input type="text" class="form-control col-10" value="' + amka + '">');
                        var tel = grandParent.children('td:nth-child(7)').html();
                        grandParent.children('td:nth-child(7)').html("");
                        grandParent.children('td:nth-child(7)').append('<input type="text" class="form-control col-10" value="' + tel + '">');
                        var paypalAccount = grandParent.children('td:nth-child(8)').html();
                        grandParent.children('td:nth-child(8)').html("");
                        grandParent.children('td:nth-child(8)').append('<input type="text" class="form-control col-10" value="' + paypalAccount + '">');
                        var id = $(this).data('id');
                        grandParent.children('td:nth-child(10)').children().hide();
                        grandParent.children('td:nth-child(10)').append('<button class="btn btn-success table-button updateBtn" data-id="' + id + '" >Update</button>');
                        grandParent.children('td:nth-child(10)').append('<button class="btn btn-danger table-button cancelUpdateBtn" data-id="' + id + '">Cancel</button>');
                        updateButtonClicked();
                        cancelUpdateButtonClicked()
                    });
                    $('.setActiveBtn').on('click', function () {
                        var id = $(this).data('id');
                        var isActive = $(this).data('is-active');
                        console.log(id);
                        console.log(isActive);
                        $.ajax({
                            url: '@Url.Action("AdminSetUserActiveInactive", "Admin")',
                            type: 'PUT',
                            data: JSON.stringify({ 'userId': id, 'isUserActive': isActive }),
                            contentType: 'application/json; charset=utf-8',
                            success() {
                                ListDoctors('', '', -1);
                            },
                            error: function () {
                                console.log('ERROR!');
                            }
                        });
                    });
                    $('.payBtn').click(function (e) {
                        const date = new Date();
                        const amountValue = parseFloat($(this).parent().prev().text().split(' ')[0]).toFixed(2);
                        const email = $(this).parent().prev().prev().text().trim();
                        const doctorId = $(e.target).data('id');
                        $.ajax({
                            type: 'get',
                            url: '/Payment/GetAccessToken',
                            dataType: 'json',
                            success: function (data) {                                
                                let payment = new Object();
                                payment.sender_batch_header = new Object();
                                payment.sender_batch_header.sender_batch_id = 'Payouts_' + date;
                                payment.sender_batch_header.email_subject = 'You have a payment!';
                                payment.sender_batch_header.email_message = 'You have received a payment! Thanks for using our service!';
                                payment.items = [];
                                payment.items[0] = new Object();
                                payment.items[0].recipient_type = 'EMAIL';
                                payment.items[0].amount = new Object();
                                payment.items[0].amount.value = amountValue;
                                payment.items[0].amount.currency = 'EUR';
                                payment.items[0].note = 'Thanks for your patronage';
                                payment.items[0].sender_item_id = '' + date.getFullYear() + (date.getMonth() + 1) + date.getDate() + '0001';
                                payment.items[0].receiver = email;
                                $.ajax({
                                    type: 'post',
                                    url: 'https://api.sandbox.paypal.com/v1/payments/payouts',
                                    dataType: 'json',
                                    contentType: 'application/json',
                                    beforeSend: function (xhr) {
                                        xhr.setRequestHeader('Authorization', data);
                                    },
                                    data: JSON.stringify(payment),
                                    processData: false,
                                    success: function (data) {
                                        console.log(data);
                                        console.log(doctorId)
                                        $.ajax({
                                            type: 'put',
                                            url: '/Appointments/SetAppointmentsPaid?doctorId=' + doctorId,
                                            success: function () {
                                                console.log('success');                                                
                                                $(e.target).parent().prev().html(parseFloat('0').toFixed(2) + ' &euro;')
                                                $(e.target).off('click');
                                                $(e.target).removeClass('refundBtn').addClass('disabled');
                                                $('#resultMessage').text('Payment was completed successfully!');
                                                $('#paymentResultModal').modal('show');
                                                setTimeout(function () {
                                                    $('#paymentResultModal').modal("hide");
                                                }, 4000)
                                            },
                                            error: function () {
                                                console.log('error')
                                                $('#resultMessage').text('Payment was not completed successfully!');
                                                $('#paymentResultModal').modal('show');
                                                setTimeout(function () {
                                                    $('#paymentResultModal').modal("hide");
                                                }, 4000)
                                            }
                                        })
                                    },
                                    error: function (error) {
                                        console.log(error);
                                    }
                                })
                            },
                            error: function (error) {
                                console.log(error)
                            }
                        })            
                    })
                },
                error: function (error) {
                    console.log(error)
                }
            })
        }
        function AddAntiForgeryToken (data) {
            data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };
        function cancelUpdateButtonClicked() {
            $('.cancelUpdateBtn').on('click', function (e) {
                ListDoctors('', '', -1);
            });
        }
        function updateButtonClicked() {
            $('.updateBtn').on('click', function (e) {
                var grandParent = $(this).parent().parent();
                var firstName = grandParent.children('td:nth-child(2)').children('input').val();
                var lastName = grandParent.children('td:nth-child(3)').children('input').val();
                var specialty = grandParent.children('td:nth-child(4)').html();
                var address = grandParent.children('td:nth-child(5)').children('input').val();
                var amka = grandParent.children('td:nth-child(6)').children('input').val();
                var tel = grandParent.children('td:nth-child(7)').children('input').val();
                var paypalAccount = grandParent.children('td:nth-child(8)').children('input').val();
                var id = $(this).data('id');
                var isDataValid = dataValidation(grandParent, firstName, lastName, amka, address)
                if (isDataValid) {
                    var modifiedUser = {
                        User: {
                            Id : id,
                            FirstName : firstName,
                            LastName : lastName,
                            AMKA : amka,
                            PaypalAccount : paypalAccount,
                            PhoneNumber: tel,
                        },
                        Doctor: {
                            MedicalSpecialty: specialty,
                            OfficeAddress: address
                        }
                    };
                    $.ajax({
                        url: '@Url.Action("UpdateUser", "Admin")',
                        type: 'PUT',
                        data: AddAntiForgeryToken(modifiedUser),
                        success: function (data) {
                            console.log('SUCCESS!');
                            grandParent.children('td:nth-child(2)').html(firstName);
                            grandParent.children('td:nth-child(3)').html(lastName);
                            grandParent.children('td:nth-child(5)').html(address);
                            grandParent.children('td:nth-child(6)').html(amka);
                            grandParent.children('td:nth-child(7)').html(tel);
                            grandParent.children('td:nth-child(8)').html(paypalAccount);
                            grandParent.children('td:nth-child(10)').children().show();
                            grandParent.children('td:nth-child(10)').children('.updateBtn').hide();
                            grandParent.children('td:nth-child(10)').children('.cancelUpdateBtn').hide();
                            alert('User updated successfully!');
                        },
                        error: function (error) {
                            console.log('ERROR!');
                            console.log(error);
                        }
                    });
                }
            });
        }
        function dataValidation(grandParent, firstName, lastName, amka, address) {
            console.log(grandParent);
            grandParent.children('td').children('span').remove();
            grandParent.children('td').children('br').remove();

            var RGEXpassed = true;
            var nameMinLenRGEX =  /^.{2,}$/;
            var nameMaxLenRGEX = /^.{0,50}$/;
            var nameRGEX = /^[A-Z][a-z]*$|^[Α-Ω][α-ωάήίόέύώϊϋΐΰ]*$ /;
            var amkaRGEX = /^.{11}$/;
            var addressMinLenRGEX = /^.{10,}$/;
            var addressMaxLenRGEX = /^.{0,100}$/;

            if (!nameMinLenRGEX.test(firstName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(2)').append('<span>First name cannot be less than 2 characters.</span><br>')
            }
            if (!nameMaxLenRGEX.test(firstName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(2)').append('<span>First name cannot be more than 50 characters.</span><br>')
            }
            if (!nameRGEX.test(firstName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(2)').append('<span>First Name must start with capital letter and then contain only small letters of the same language.</span><br>')
            }
            if (!nameMinLenRGEX.test(lastName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(3)').append('<span>Last name cannot be less than 2 characters.</span><br>')
            }
            if (!nameMaxLenRGEX.test(lastName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(3)').append('<span>Last name cannot be more than 50 characters.</span><br>')
            }
            if (!nameRGEX.test(lastName)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(3)').append('<span>Last Name must start with capital letter and then contain only small letters of the same language.</span><br>')
            }
            if (!amkaRGEX.test(amka)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(6)').append('<span>AMKA should be 11 digits.</span><br>')
            }
            if (!addressMinLenRGEX.test(address)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(5)').append('<span>Address length cannot be less than 10 characters.</span><br>')
            }
            if (!addressMaxLenRGEX.test(address)) {
                RGEXpassed = false
                grandParent.children('td:nth-child(5)').append('<span>Address length cannot be more than 100 characters.</span><br>')
            }
            return RGEXpassed;
        }
    })


    </script>
}

